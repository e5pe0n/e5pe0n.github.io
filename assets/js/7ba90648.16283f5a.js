"use strict";(self.webpackChunke_5_pe_0_n_github_io=self.webpackChunke_5_pe_0_n_github_io||[]).push([[8012],{9120:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"coding/js/fundamentals","title":"JavaScript: The Definitive Guide","description":"- 7th Edtion","source":"@site/docs/coding/js/fundamentals.md","sourceDirName":"coding/js","slug":"/coding/js/fundamentals","permalink":"/docs/coding/js/fundamentals","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"techNoteSidebar","previous":{"title":"JavaScript","permalink":"/docs/category/javascript"},"next":{"title":"Tips","permalink":"/docs/coding/js/tips"}}');var t=s(6070),i=s(5248);const l={},o="JavaScript: The Definitive Guide",c={},a=[{value:"Chapter 1. Introduction to JavaScript",id:"chapter-1-introduction-to-javascript",level:2},{value:"ECMAScript",id:"ecmascript",level:3},{value:"Chapter 3. Types, Values, and Variables",id:"chapter-3-types-values-and-variables",level:2},{value:"Primitives",id:"primitives",level:3},{value:"Numbers",id:"numbers",level:4},{value:"<code>NaN</code>",id:"nan",level:5},{value:"BigInt",id:"bigint",level:4},{value:"Strings",id:"strings",level:4},{value:"<code>null</code> and <code>undefined</code>",id:"null-and-undefined",level:4},{value:"Symbols",id:"symbols",level:4},{value:"Objects",id:"objects",level:3},{value:"Arrays",id:"arrays",level:4},{value:"Date",id:"date",level:4},{value:"Type Conaversions",id:"type-conaversions",level:3},{value:"<em>var</em>",id:"var",level:3},{value:"<em>hoisting</em>",id:"hoisting",level:4},{value:"Destructing Assignment",id:"destructing-assignment",level:3},{value:"Chapter 4. Expressions and Operators",id:"chapter-4-expressions-and-operators",level:2},{value:"Property Access Expressions",id:"property-access-expressions",level:3},{value:"Conditional Property Access",id:"conditional-property-access",level:4},{value:"Conditional Invocation",id:"conditional-invocation",level:4},{value:"Operators",id:"operators",level:3},{value:"Associative",id:"associative",level:4},{value:"<code>**</code> operator",id:"-operator",level:4},{value:"<code>/</code> operator",id:"-operator-1",level:4},{value:"<code>+</code> operator",id:"-operator-2",level:4},{value:"Bitwise Operators",id:"bitwise-operators",level:4},{value:"<code>in</code> operator",id:"in-operator",level:4},{value:"<code>eval()</code>",id:"eval",level:4},{value:"<code>??</code> operator",id:"-operator-3",level:4},{value:"<code>typeof</code> operator",id:"typeof-operator",level:4},{value:"<code>delete</code> operator",id:"delete-operator",level:4},{value:"Chapter 5. Statements",id:"chapter-5-statements",level:2},{value:"<em>if</em> statement",id:"if-statement",level:3},{value:"<em>switch</em> statement",id:"switch-statement",level:3},{value:"<em>for/of</em> statement",id:"forof-statement",level:3},{value:"<em>for/in</em> statement",id:"forin-statement",level:3},{value:"<em>try/catch/finally</em>",id:"trycatchfinally",level:3},{value:"strict mode",id:"strict-mode",level:3},{value:"<em>class</em>",id:"class",level:3},{value:"Chapter 6. Objects",id:"chapter-6-objects",level:2},{value:"Testing Properties",id:"testing-properties",level:3},{value:"Shorthand Properties",id:"shorthand-properties",level:3},{value:"Computed Property Names",id:"computed-property-names",level:3},{value:"Spread Operator",id:"spread-operator",level:3},{value:"Shorthand Methods",id:"shorthand-methods",level:3},{value:"Getter/Setter",id:"gettersetter",level:3},{value:"Chapter 7. Arrays",id:"chapter-7-arrays",level:2},{value:"The Spread Operator",id:"the-spread-operator",level:3},{value:"<em>Array.from()</em>",id:"arrayfrom",level:3},{value:"<em>Array.length</em>",id:"arraylength",level:3},{value:"<em>entries()</em>",id:"entries",level:3},{value:"<em>forEach()</em>",id:"foreach",level:3},{value:"<em>find()</em>",id:"find",level:3},{value:"<em>findIndex()</em>",id:"findindex",level:3},{value:"<em>every()</em>",id:"every",level:3},{value:"<em>some()</em>",id:"some",level:3},{value:"<em>slice()</em>",id:"slice",level:3},{value:"<em>splice()</em>",id:"splice",level:3},{value:"<em>indexOf()</em>",id:"indexof",level:3},{value:"<em>includes()</em>",id:"includes",level:3},{value:"<em>sort()</em>",id:"sort",level:3},{value:"<em>reverse()</em>",id:"reverse",level:3},{value:"Chapter 8. Functions",id:"chapter-8-functions",level:2},{value:"Properties",id:"properties",level:3},{value:"Declarations",id:"declarations",level:3},{value:"<code>this</code>",id:"this",level:3},{value:"Arrows vs. Others",id:"arrows-vs-others",level:3},{value:"Constructor",id:"constructor",level:3},{value:"Indirect Invocation",id:"indirect-invocation",level:3},{value:"<em>call()</em> and <em>apply()</em>",id:"call-and-apply",level:4},{value:"<em>bind()</em>",id:"bind",level:4},{value:"Implicit Function Invocation",id:"implicit-function-invocation",level:3},{value:"Parameter Defaults",id:"parameter-defaults",level:3},{value:"Rest Parameters",id:"rest-parameters",level:3},{value:"Destructing Function Arguments into Parameters",id:"destructing-function-arguments-into-parameters",level:3},{value:"Function Properties",id:"function-properties",level:3},{value:"Closures",id:"closures",level:3},{value:"lexical scope",id:"lexical-scope",level:4},{value:"Chapter 9. Classes",id:"chapter-9-classes",level:2},{value:"Constructors",id:"constructors",level:3},{value:"<em>class</em> keyword",id:"class-keyword",level:3},{value:"<em>instanceof()</em>",id:"instanceof",level:4},{value:"<em>isPrototypeOf()</em>",id:"isprototypeof",level:4},{value:"Static Methods",id:"static-methods",level:3},{value:"Static Fields",id:"static-fields",level:3},{value:"Adding Methods to Existing Classes",id:"adding-methods-to-existing-classes",level:3},{value:"Subclasses",id:"subclasses",level:3},{value:"JavaScript Inheritance Mechanism",id:"javascript-inheritance-mechanism",level:4},{value:"<em>extends</em> and <em>super</em>",id:"extends-and-super",level:4},{value:"Delegation Instead of Inheritance",id:"delegation-instead-of-inheritance",level:3},{value:"Chapter 10. Modules",id:"chapter-10-modules",level:2},{value:"Node Modules",id:"node-modules",level:3},{value:"Exports one by one",id:"exports-one-by-one",level:4},{value:"Exports all together",id:"exports-all-together",level:4},{value:"ES6 Modules",id:"es6-modules",level:3},{value:"Re-Exports",id:"re-exports",level:4},{value:"Chapter 11. The JavaScript Standard Library",id:"chapter-11-the-javascript-standard-library",level:2},{value:"Sets",id:"sets",level:3},{value:"Constructor",id:"constructor-1",level:4},{value:"size",id:"size",level:4},{value:"<em>add()</em>",id:"add",level:4},{value:"<em>delete()</em>",id:"delete",level:4},{value:"iteration",id:"iteration",level:4},{value:"Maps",id:"maps",level:3},{value:"Constructor",id:"constructor-2",level:4},{value:"size",id:"size-1",level:4},{value:"<em>set()</em>",id:"set",level:4},{value:"<em>get()</em>",id:"get",level:4},{value:"<em>delete()</em>",id:"delete-1",level:4},{value:"iteration",id:"iteration-1",level:4},{value:"Typed Arrays",id:"typed-arrays",level:3},{value:"Constructors",id:"constructors-1",level:4},{value:"Initialization",id:"initialization",level:4},{value:"Array Buffer",id:"array-buffer",level:4},{value:"Methods",id:"methods",level:4},{value:"RegExp",id:"regexp",level:3},{value:"<em>replace()</em>",id:"replace",level:4},{value:"<em>match()</em>",id:"match",level:4},{value:"<em>match</em> Object",id:"match-object",level:5},{value:"<em>matchAll()</em>",id:"matchall",level:4},{value:"Dates and Times",id:"dates-and-times",level:3},{value:"Date",id:"date-1",level:4},{value:"Error Classes",id:"error-classes",level:3},{value:"Constructor",id:"constructor-3",level:4},{value:"properties",id:"properties-1",level:4},{value:"JSON",id:"json",level:3},{value:"<em>JSON.parse()</em>",id:"jsonparse",level:4},{value:"<em>JSON.stringify()</em>",id:"jsonstringify",level:4},{value:"URL APIs",id:"url-apis",level:3},{value:"URL class",id:"url-class",level:4},{value:"Chapter 12. Iterators and Generators",id:"chapter-12-iterators-and-generators",level:2},{value:"Iterator",id:"iterator",level:3},{value:"Generators",id:"generators",level:3},{value:"<em>yield</em>*",id:"yield",level:4},{value:"Chapter 13. Asynchronous JavaScript",id:"chapter-13-asynchronous-javascript",level:2},{value:"Promise",id:"promise",level:3},{value:"Terminologies",id:"terminologies",level:4},{value:"Error Handlings",id:"error-handlings",level:4},{value:"multi-catch methods",id:"multi-catch-methods",level:5},{value:"<em>Promise.all()</em>",id:"promiseall",level:4},{value:"<em>Promise.allSettled()</em>",id:"promiseallsettled",level:4},{value:"<em>Promise.race()</em>",id:"promiserace",level:4},{value:"Handmade Promise",id:"handmade-promise",level:4},{value:"Promise Sequence",id:"promise-sequence",level:4},{value:"<em>await</em> and <em>async</em>",id:"await-and-async",level:4},{value:"<em>for/await</em>",id:"forawait",level:4},{value:"Asynchronous Iterators and Generators",id:"asynchronous-iterators-and-generators",level:4},{value:"Chapter 14. Metaprogramming",id:"chapter-14-metaprogramming",level:2},{value:"Property Attributes",id:"property-attributes",level:3},{value:"<em>property descriptor</em> object",id:"property-descriptor-object",level:4},{value:"Object Extensibility",id:"object-extensibility",level:3},{value:"<em>Object.seal()</em>",id:"objectseal",level:4},{value:"<em>Object.freeze()</em>",id:"objectfreeze",level:4},{value:"Symbols",id:"symbols-1",level:3},{value:"<em>Symbol.toStringTag</em>",id:"symboltostringtag",level:4},{value:"Pattern-Matching Symbols",id:"pattern-matching-symbols",level:3},{value:"<em>Symbol.toPrimitive</em>",id:"symboltoprimitive",level:3},{value:"Proxy Class",id:"proxy-class",level:3},{value:"Chapter 15. JavaScript in Web Browsers",id:"chapter-15-javascript-in-web-browsers",level:2},{value:"Namespace",id:"namespace",level:3},{value:"Web Worker",id:"web-worker",level:3},{value:"The same-origin policy",id:"the-same-origin-policy",level:3},{value:"Custom Event",id:"custom-event",level:3},{value:"The <em>class</em> attribute",id:"the-class-attribute",level:3},{value:"Dataset attributes",id:"dataset-attributes",level:3},{value:"Coordinate Systems",id:"coordinate-systems",level:3},{value:"<em>Location</em> Object",id:"location-object",level:3},{value:"<em>fetch</em> API",id:"fetch-api",level:3},{value:"Aborting a request",id:"aborting-a-request",level:4},{value:"<em>LocalStorage</em>",id:"localstorage",level:3},{value:"<em>sessionStorage</em>",id:"sessionstorage",level:3},{value:"<em>Cookie</em>s",id:"cookies",level:3},{value:"<em>IndexedDB</em>",id:"indexeddb",level:3},{value:"Chapter 16. Server-Side JavaScript with Node",id:"chapter-16-server-side-javascript-with-node",level:2},{value:"Module System",id:"module-system",level:3},{value:"Asynchrony",id:"asynchrony",level:3},{value:"Lowest API to read and write a file",id:"lowest-api-to-read-and-write-a-file",level:4},{value:"<em>Event</em>s and <em>EventEmitter</em>",id:"events-and-eventemitter",level:3},{value:"<em>Stream</em>s",id:"streams",level:3},{value:"<em>Pipe</em>s",id:"pipes",level:4},{value:"<em>for/await</em>",id:"forawait-1",level:4},{value:"<em>path</em>",id:"path",level:3},{value:"File Utils",id:"file-utils",level:3},{value:"HTTP Clients and Servers",id:"http-clients-and-servers",level:3},{value:"Child Processes",id:"child-processes",level:3},{value:"<em>spawn()</em>",id:"spawn",level:4},{value:"<em>fork()</em>",id:"fork",level:4},{value:"<em>Worker Threads</em>",id:"worker-threads",level:4}];function d(e){const n={blockquote:"blockquote",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"javascript-the-definitive-guide",children:"JavaScript: The Definitive Guide"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"7th Edtion"}),"\n",(0,t.jsx)(n.li,{children:"David Flanagan"}),"\n",(0,t.jsx)(n.li,{children:"O'Relly"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"chapter-1-introduction-to-javascript",children:"Chapter 1. Introduction to JavaScript"}),"\n",(0,t.jsx)(n.h3,{id:"ecmascript",children:"ECMAScript"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"center"},children:"version"}),(0,t.jsx)(n.th,{style:{textAlign:"center"},children:"released"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"center"},children:"ES5"}),(0,t.jsx)(n.td,{style:{textAlign:"center"},children:"2010"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"center"},children:"ES6"}),(0,t.jsx)(n.td,{style:{textAlign:"center"},children:"2015"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"center"},children:"ES2016"}),(0,t.jsx)(n.td,{style:{textAlign:"center"},children:"2016"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"center"},children:"ES2017"}),(0,t.jsx)(n.td,{style:{textAlign:"center"},children:"2017"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"center"},children:"..."}),(0,t.jsx)(n.td,{style:{textAlign:"center"},children:"..."})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"chapter-3-types-values-and-variables",children:"Chapter 3. Types, Values, and Variables"}),"\n",(0,t.jsx)(n.h3,{id:"primitives",children:"Primitives"}),"\n",(0,t.jsx)(n.h4,{id:"numbers",children:"Numbers"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["arithmetic operations do not raise errors in cases of overflow, underflow, or division by zero","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["evaluate to","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"Nan"})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Infinity"})," or ",(0,t.jsx)(n.code,{children:"-Infinity"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"0"})," or ",(0,t.jsx)(n.code,{children:"-0"})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"0 == -0   // true\n0 === -0  // true\n"})}),"\n",(0,t.jsx)(n.p,{children:"string conversions"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'let n = 123456.789;\n\nn.toFixed(0); // "123457"\nn.toFixed(2); // "123456.79"\nn.toFixed(5); // "123456.78900"\n\nn.toExponential(1); // "1.2e+5"\nn.toExponential(3); // "1.235e+5"\n\nn.toPrecision(4); // "1.235e+5"\nn.toPrecision(7); // "123456.8"\nn.toPrecision(10); // "123456.7890"\n'})}),"\n",(0,t.jsx)(n.h5,{id:"nan",children:(0,t.jsx)(n.code,{children:"NaN"})}),"\n",(0,t.jsxs)(n.p,{children:["comparison including a ",(0,t.jsx)(n.code,{children:"NaN"})," always returns ",(0,t.jsx)(n.code,{children:"false"}),",\ntherefore must use ",(0,t.jsx)(n.em,{children:"Number.isNaN()"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"x = NaN\n\nx === NaN       // => false!\nNumber.isNan(x) // => true\n\n"})}),"\n",(0,t.jsx)(n.h4,{id:"bigint",children:"BigInt"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"64-bit integer"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"0 == 0n   // => true\n0 === 0n  // => false!\n"})}),"\n",(0,t.jsx)(n.h4,{id:"strings",children:"Strings"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"immutable"})}),"\n",(0,t.jsx)(n.li,{children:"two strings are equal if and only if the length and the character at each index is the same."}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"null-and-undefined",children:[(0,t.jsx)(n.code,{children:"null"})," and ",(0,t.jsx)(n.code,{children:"undefined"})]}),"\n",(0,t.jsxs)(n.p,{children:["i think it better to use ",(0,t.jsx)(n.code,{children:"null"})," rather than ",(0,t.jsx)(n.code,{children:"undefined"})," when you initialize a variable or a property with either one, because ",(0,t.jsx)(n.code,{children:"undefined"})," seems like accidental, whereas ",(0,t.jsx)(n.code,{children:"null"})," looks like intended to use the variable or the property."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'null == undefined   // => true\nnull === undefined  // => false\n\n\nnull == false;      // => false!\nundefined == false; // => false!\n\nlet x = null; // or undefined\nif (x) console.log("true");\nelse console.log("false");  // => false; Boolean(null) returns false\n'})}),"\n",(0,t.jsx)(n.h4,{id:"symbols",children:"Symbols"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["every ",(0,t.jsx)(n.em,{children:"Symbol"})," is different from every other ",(0,t.jsx)(n.em,{children:"Symbol"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"this is useful to create unique property names"}),"\n",(0,t.jsx)(n.li,{children:"e.g. when you want to add a new property to an object but not to overwrite an existing property with the same name accidentally."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"objects",children:"Objects"}),"\n",(0,t.jsx)(n.h4,{id:"arrays",children:"Arrays"}),"\n",(0,t.jsx)(n.p,{children:"two distinct arrays are not equal even if they have the same elements in the same order"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"let a = [], b = [];\na === b   // => false!\n\nlet a = [];\nlet b = a;\na === b   // => true\n\nfunction equalArrays(a, b) {\n  if (a === b) return true;\n  if (a.length != b.length) return false;\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] != b[i]) return false;\n  }\n  return true;\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"copy an array"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'let a = ["a", "b", "c"];\nlet b = Array.from(a);\n'})}),"\n",(0,t.jsx)(n.h4,{id:"date",children:"Date"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"d1 = new Date(2021, 10, 5, 20, 32, 10);\nd2 = new Date(2021, 10, 5, 20, 32, 11);\nd1 < d2; // true; `>` operator converts Date objects to numbers (timestamp)\n"})}),"\n",(0,t.jsx)(n.h3,{id:"type-conaversions",children:"Type Conaversions"}),"\n",(0,t.jsx)(n.p,{children:"see p.45 for details"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'10 + " object";   // "10 object"\n"7" + "4";        // 28\nlet n = 1 - "x";  // n == NaN\nn + " objects"    // "NaN object"\n\nnull + 1;   // 1; null == 0\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'null + 1; // => 1\n"" + 1; // => 1\n\nBoolean({}); // => true!\nBoolean([]); // => true!\n'})}),"\n",(0,t.jsx)(n.p,{children:"idioms for type conversion"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'x + ""  // => String(x)\n+x      // => Number(x)\nx-0     // => Number(x)\n!!x     // => Boolean(x)\n'})}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"center"},children:"Algorithms"}),(0,t.jsx)(n.th,{style:{textAlign:"center"},children:"Method"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"center"},children:"prefer-string"}),(0,t.jsxs)(n.td,{style:{textAlign:"center"},children:[(0,t.jsx)(n.code,{children:"toString()"})," -> ",(0,t.jsx)(n.code,{children:"ValueOf()"})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"center"},children:"prefer-number"}),(0,t.jsxs)(n.td,{style:{textAlign:"center"},children:[(0,t.jsx)(n.code,{children:"ValueOf()"})," -> ",(0,t.jsx)(n.code,{children:"toString()"})]})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"var",children:(0,t.jsx)(n.em,{children:"var"})}),"\n",(0,t.jsxs)(n.p,{children:["Don't Use ",(0,t.jsx)(n.em,{children:"var"}),"!"]}),"\n",(0,t.jsx)(n.p,{children:"see the reason why strict mode is used => p.56"}),"\n",(0,t.jsxs)(n.p,{children:["it is legal to declare the same variable multiple times with ",(0,t.jsx)(n.em,{children:"var"}),"; re-initialized each time"]}),"\n",(0,t.jsx)(n.h4,{id:"hoisting",children:(0,t.jsx)(n.em,{children:"hoisting"})}),"\n",(0,t.jsxs)(n.p,{children:["declaration with ",(0,t.jsx)(n.em,{children:"var"})," is ",(0,t.jsx)(n.em,{children:"hoisted"})," to the top of the enclosing function.",(0,t.jsx)(n.br,{}),"\n","therefore undeclared variables can be used before the declaration!"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'// this is legal code\n\nx = 5; // Assign 5 to x\n\nelem = document.getElementById("demo"); // Find an element\nelem.innerHTML = x;                     // Display x in the element\n\nvar x; // Declare x -> hoisted to the top\n'})}),"\n",(0,t.jsx)(n.h3,{id:"destructing-assignment",children:"Destructing Assignment"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"since ES6"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"let [x, y] = [1, 2];\n[x, y] = [x + 1, y + 1];\n\n[x, y] = [y, x] // swap\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"let o = { x: 1, y: 2 };\nfor (const [name, value] of Object.entries(o)) {\n  console.log(name, value);\n}\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'let [x, y] = [1];         // x == 1, y == undefined\n[x, y] = [1, 2, 3];       // x == 1, y == 2\n[, x, , y] = [1, 2, 3, 4] // x == 2, y == 4\n\n\nlet [x, ...y] = [1, 2, 3, 4];  // x == 1, y == [2, 3, 4]\nlet [a, [b, c]] = [1, [2, 2.5], 3]; // a == 1, b == 2, c == 2.5\n\n\nlet [first, ...rest] = "Hello"; // first == "H", rest == ["e", "l", "l", "o"]\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"let transparent = { r: 0.0, g: 0.1, b: 0.2, a: 1.0 };\nlet {r, g, b} = transparent;  // r == 0.0, g == 0.1, b == 0.2\n\nlet {r: red, g: green, b: blue} = transparent;\nconsole.log(red, green blue); // 0.0, 0.1, 0.2\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"let points = { p1: [1, 2], p2: [3, 4] };\nlet { p1: [x1, y1], p2: [x2, y2] } = points;  // x1 == 1, y1 ==2, x2 == 3, y2 == 4\n"})}),"\n",(0,t.jsx)(n.h2,{id:"chapter-4-expressions-and-operators",children:"Chapter 4. Expressions and Operators"}),"\n",(0,t.jsx)(n.h3,{id:"property-access-expressions",children:"Property Access Expressions"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const a = [10, 11, 12, 13, 14];\na[0]; // 10\na["0"]; // 10!\n\nconst o = {};\no.m;  // undefined; no error occurs!\n'})}),"\n",(0,t.jsx)(n.h4,{id:"conditional-property-access",children:"Conditional Property Access"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"since ES2020"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"expression ?. identifier\nexpression ?. [ expression ]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["if expression before ",(0,t.jsx)(n.code,{children:"?."})," evaluates to ",(0,t.jsx)(n.code,{children:"null"})," or ",(0,t.jsx)(n.code,{children:"undefined"}),", the entire expression immediately evaluates to ",(0,t.jsx)(n.code,{children:"undefined"})," (remaining expressions are not evaluated)."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"let a = { b: null };\n// called *optional chaining*\na.b?.c.d  // undefined\n\nlet index = 0;\nlet a;\na?.[index++]; // => undefined; index == 0\n"})}),"\n",(0,t.jsx)(n.h4,{id:"conditional-invocation",children:"Conditional Invocation"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"since ES2020"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["checks ",(0,t.jsx)(n.code,{children:"null"})," or ",(0,t.jsx)(n.code,{children:"undefined"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"function square(x, log) { // `log` is a function as an optional arg\n  log?.(x);\n  return x * x;\n};\n"})}),"\n",(0,t.jsx)(n.h3,{id:"operators",children:"Operators"}),"\n",(0,t.jsx)(n.p,{children:"see p.69"}),"\n",(0,t.jsx)(n.h4,{id:"associative",children:"Associative"}),"\n",(0,t.jsx)(n.p,{children:"right-to-left associatives"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"y = a ** b ** c;  // ((a ** b) ** c)\nx = --y;          // (-(-y))\nw = x = y = z     // (x = (y = z))\nq = a ? b : c ? d : e ? f : g;  // (a ? b : (c ? d : (e ? f : g)))\n"})}),"\n",(0,t.jsxs)(n.h4,{id:"-operator",children:[(0,t.jsx)(n.code,{children:"**"})," operator"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"since ES2016"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsxs)(n.strong,{children:["operators ",(0,t.jsx)(n.code,{children:"??"})," and ",(0,t.jsx)(n.code,{children:"**"})," are not defined clearly about their precedence so must parentheses expression using them (since ES2020)"]}),"."]}),"\n",(0,t.jsxs)(n.h4,{id:"-operator-1",children:[(0,t.jsx)(n.code,{children:"/"})," operator"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Does not trancate the fraction part!"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"5 / 1;  // 5\n5 / 2;  // 2.5\n"})}),"\n",(0,t.jsxs)(n.h4,{id:"-operator-2",children:[(0,t.jsx)(n.code,{children:"+"})," operator"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'1 + 2;          // 3\n"1" + "2";      // "12"\n"1" + 2;        // "12"\n1 + {};         // 1[object Object]\ntrue + true;    // 2\n2 + null;       // 2\n2 + undefined;  // Nan\n'})}),"\n",(0,t.jsx)(n.h4,{id:"bitwise-operators",children:"Bitwise Operators"}),"\n",(0,t.jsxs)(n.p,{children:["first, operands are converted to 32-bit int (",(0,t.jsx)(n.code,{children:"NaN"}),", ",(0,t.jsx)(n.code,{children:"Infinity"}),", ",(0,t.jsx)(n.code,{children:"-Infinity"})," are converted to 0)."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:">>>"})," is not used for ",(0,t.jsx)(n.em,{children:"BigInt"})," because ",(0,t.jsx)(n.em,{children:"BigInt"})," is not implemented as 2's complement."]}),"\n",(0,t.jsxs)(n.h4,{id:"in-operator",children:[(0,t.jsx)(n.code,{children:"in"})," operator"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Not the same as Python's one at all!!"})}),"\n",(0,t.jsxs)(n.p,{children:["first, left-side operand is converted to string.",(0,t.jsx)(n.br,{}),"\n","then ",(0,t.jsxs)(n.strong,{children:["returns ",(0,t.jsx)(n.code,{children:"true"})," if right-side object has left-side operand as a property"]}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const point = { x: 1, y: 1 };\n"x" in point;         // true\n"z" in point;         // false\n"toString" in point;  // true\n\nconst data = [7, 8, 9];\n"0" in data;  // true\n1 in data;    // true\n3 in data;    // false\n'})}),"\n",(0,t.jsx)(n.h4,{id:"eval",children:(0,t.jsx)(n.code,{children:"eval()"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Don't use eval()!!"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"eval()"})," can be a security hole because user can run code by passing strings to ",(0,t.jsx)(n.code,{children:"eval()"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"-operator-3",children:[(0,t.jsx)(n.code,{children:"??"})," operator"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"since ES2020"}),"\n",(0,t.jsx)(n.li,{children:"first-defined operator"}),"\n",(0,t.jsxs)(n.li,{children:["returns the left-side expression result if the left-side operand is ",(0,t.jsx)(n.strong,{children:"NOT"})," ",(0,t.jsx)(n.code,{children:"null"})," or ",(0,t.jsx)(n.em,{children:"NOT"})," ",(0,t.jsx)(n.code,{children:"undefined"}),"; otherwise returns the right-side expression result."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"// if maxWidth === 0 then max === 0\nconst max = maxWidth ??  500;\n\n// if maxWidth === 0 then max === 500\nconst max = maxWidth || 500\n"})}),"\n",(0,t.jsxs)(n.h4,{id:"typeof-operator",children:[(0,t.jsx)(n.code,{children:"typeof"})," operator"]}),"\n",(0,t.jsxs)(n.p,{children:["Be aware of ",(0,t.jsx)(n.code,{children:"null"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'typeof null   // "object"\n'})}),"\n",(0,t.jsxs)(n.h4,{id:"delete-operator",children:[(0,t.jsx)(n.code,{children:"delete"})," operator"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const o = { x: 1, y: 2 };\ndelete o.x;\n"x" in o  // false\n\nconst a = [1, 2, 3];\ndelete a[2];\n2 in a    // false\na.length  // 3  <- Be careful!!\n'})}),"\n",(0,t.jsx)(n.h2,{id:"chapter-5-statements",children:"Chapter 5. Statements"}),"\n",(0,t.jsxs)(n.h3,{id:"if-statement",children:[(0,t.jsx)(n.em,{children:"if"})," statement"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"else"})," clause is part of the ",(0,t.jsx)(n.strong,{children:"nearest"})," ",(0,t.jsx)(n.em,{children:"if"})," statement."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"if (exp1)\n  if (exp2)\n    statement1\nelse\n  statement2\n"})}),"\n",(0,t.jsx)(n.p,{children:"this is equivalent to"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"if (exp1) {\n  if (exp2) {\n    statement1\n  } else {\n    statement2\n  }\n}\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"switch-statement",children:[(0,t.jsx)(n.em,{children:"switch"})," statement"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.strong,{children:["Don't forget ",(0,t.jsx)(n.em,{children:"break"})," or ",(0,t.jsx)(n.em,{children:"return"}),"!"]})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Note:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"default"})," statement can be placed anywhere in the body (no need to consider the order of ",(0,t.jsx)(n.em,{children:"case"}),"s)."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"switch (exp) {\n  case exp:\n    statement;\n    [break/return;]\n  case exp:\n    statement;\n    [break/return;]\n  ...\n  default:\n    statement;\n    [break/return;]\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"e.g."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'function convert(x) {\n  switch (typeof x) {\n    case "number":\n      return x.toString(16);\n    case "string":\n      return \'"\' + x + \'"\';\n    default:\n      return String(x);\n  }\n}\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"forof-statement",children:[(0,t.jsx)(n.em,{children:"for/of"})," statement"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"since ES6"}),"\n",(0,t.jsxs)(n.li,{children:["works with ",(0,t.jsx)(n.em,{children:"iterable"})," objects","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"iterable"})," objects: ",(0,t.jsx)(n.em,{children:"array"}),"s, ",(0,t.jsx)(n.em,{children:"string"}),"s, ",(0,t.jsx)(n.em,{children:"set"}),"s, ",(0,t.jsx)(n.em,{children:"map"}),"s"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const data = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nlet sum = 0;\nfor (const element of data) {\n  sum += element;\n}\nconsole.log(sum); // 45\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"infinite loop"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const data = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nlet sum = 0;\nfor (const element of data) {\n  sum += element;\n  data.push(sum); // pushed element is also iterated\n}\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"iterating object's properties"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const o = { x: 1, y: 2, z: 3 };\nfor (const k of Object.keys(o)) {\n  console.log(k); // x, y, z\n}\n\nfor (const v of Object.values(o)) {\n  console.log(v); // 1, 2, 3\n}\n\nfor (const [k, v] of Object.entries(o)) {\n  console.log(k, v);  // x 1, y 2, z 3\n}\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"string"}),"s are iterated by Unicode codepoint, not by UTF-16 characters"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["iterating ",(0,t.jsx)(n.em,{children:"map"}),"s"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const m = new Map([\n  [0, "one"],\n  [1, "two"],\n  [2, "three"],\n]);\nfor (const [k, v] of m) {\n  console.log(k, v); // 0 "one", 2 "two", 3 "three"\n}\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"forin-statement",children:[(0,t.jsx)(n.em,{children:"for/in"})," statement"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.strong,{children:["Use ",(0,t.jsx)(n.em,{children:"for/of"})," with ",(0,t.jsx)(n.em,{children:"Object.keys()"})," instead of ",(0,t.jsx)(n.em,{children:"for/in"})]})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"works with any object"}),"\n",(0,t.jsxs)(n.li,{children:["if object is ",(0,t.jsx)(n.code,{children:"null"})," or ",(0,t.jsx)(n.code,{children:"undefined"}),", the loop is skipped"]}),"\n",(0,t.jsxs)(n.li,{children:["iterates the neme of ",(0,t.jsx)(n.em,{children:"enumerable"})," properties"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const o = { x: 1, y: 2, z: 3 };\nfor (const k in o) {\n  console.log(k, o[k]); // x 1, y 2, z 3\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"trycatchfinally",children:(0,t.jsx)(n.em,{children:"try/catch/finally"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"finally"})," block is executed even when"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["the program returns in the middle of ",(0,t.jsx)(n.em,{children:"try"})," block by ",(0,t.jsx)(n.em,{children:"return"}),", ",(0,t.jsx)(n.em,{children:"break"}),", or ",(0,t.jsx)(n.em,{children:"continue"})]}),"\n",(0,t.jsxs)(n.li,{children:["an exception which cannot be handled ",(0,t.jsx)(n.em,{children:"catch"})," block occurs"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"catch"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["since ES2019: bare ",(0,t.jsx)(n.em,{children:"catch"})," allowed"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"// bare catch\n\ntry {\n  // do something\n} catch { // catch any exception\n  // do something\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"strict-mode",children:"strict mode"}),"\n",(0,t.jsx)(n.p,{children:"see p.122 for detail"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["the ",(0,t.jsx)(n.em,{children:"with"})," statement is not allowed"]}),"\n",(0,t.jsx)(n.li,{children:"all variables must be declared (not be hoisted)"}),"\n",(0,t.jsxs)(n.li,{children:["functions invoked as functions (rather than as methods) have a ",(0,t.jsx)(n.em,{children:"this"})," value of ",(0,t.jsx)(n.code,{children:"undefined"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Note:"})}),"\n",(0,t.jsxs)(n.p,{children:["any code in a ",(0,t.jsx)(n.em,{children:"class"})," body or in an ES6 module is automatically strict code"]}),"\n",(0,t.jsx)(n.h3,{id:"class",children:(0,t.jsx)(n.em,{children:"class"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"class declarations are not hoisted!!"}),(0,t.jsx)(n.br,{}),"\n","i.e. cannot use a ",(0,t.jsx)(n.em,{children:"class"})," before the declaration in code"]}),"\n",(0,t.jsx)(n.h2,{id:"chapter-6-objects",children:"Chapter 6. Objects"}),"\n",(0,t.jsx)(n.h3,{id:"testing-properties",children:"Testing Properties"}),"\n",(0,t.jsxs)(n.p,{children:["use ",(0,t.jsx)(n.em,{children:"propertyIsEnumerable()"})," unless you have a certain reason."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const o = { x: 1 };\n"x" in o; // true\n"y" in o; // false\n"toString" in o; // true\n\no.hasOwnProperty("x"); // true\no.hasOwnProperty("y"); // false\no.hasOwnProperty("toString"); // false\n\no.propertyIsEnumerable("x"); // true\no.propertyIsEnumerable("toString"); // false\nObject.prototype.propertyIsEnumerable("toString"); // false\n\no.x !== undefined; // true\no.y !== undefined; // false\no.toString !== undefined; // true\n'})}),"\n",(0,t.jsx)(n.h3,{id:"shorthand-properties",children:"Shorthand Properties"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"since ES6"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const x = 1, y = 2;\nconst o = { x, y }; // {x: 1, y: 2}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"computed-property-names",children:"Computed Property Names"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"since ES6"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const PROPERTY_NAME = "p1";\nconst computePropertyName = () => "p" + 2;\n\nconst o = {\n  [PROPERTY_NAME]: 1,\n  [computePropertyName()]: 2,\n}; // { p1: 1, p2: 2 }\n'})}),"\n",(0,t.jsx)(n.h3,{id:"spread-operator",children:"Spread Operator"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"since ES2018"}),"\n",(0,t.jsx)(n.li,{children:"works with only own properties, not inherited ones"}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Don't forget it takes O(n) to spread properties"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["be careful for many spreading in ",(0,t.jsx)(n.em,{children:"for"})," loop"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const position = { x: 0, y: 0 };\nconst dimensions = { width: 100, height: 75 };\nconst rect = { ...position, ...dimensions };\n// { x: 0, y: 0, width: 100, height: 75 }\n"})}),"\n",(0,t.jsx)(n.h3,{id:"shorthand-methods",children:"Shorthand Methods"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const square = {\n  area() { return this.side * this.side; },  // area: function() { ... }\n  side: 10,\n};\n"})}),"\n",(0,t.jsx)(n.h3,{id:"gettersetter",children:"Getter/Setter"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"since ES5"}),"\n",(0,t.jsx)(n.li,{children:"inheritable"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const p = {\n  x: 1.0,\n  y: 1.0,\n\n  get r() {\n    return Math.hypot(this.x, this.y);\n  },\n  set r(newvalue) {\n    const oldvalue = Math.hypot(this.x, this.y);\n    const ratio = newvalue / oldvalue;\n    this.x *= ratio;\n    this.y *= ratio;\n  },\n  get theta() {\n    return Math.atan2(this.y, this.x);\n  },\n};\n\nconsole.log(p.r);\nconsole.log(p.theta);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"chapter-7-arrays",children:"Chapter 7. Arrays"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["JavaScript ",(0,t.jsx)(n.em,{children:"array"}),"s are simply a special type of object","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["index is a property whose name is an integer between 0 to 2^32 - 1","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"a[1]"})," is equivalent to ",(0,t.jsx)(n.code,{children:'a["1"]'})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"out of bounds"})," error does not exist because arrays simply return ",(0,t.jsx)(n.code,{children:"undefined"})," if accessed to an index greater than the length"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"the-spread-operator",children:"The Spread Operator"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const letters = [...\"hello world\"];\nconst rem_dups = [...new Set(letters)];\nconsole.log(rem_dups); // ['h', 'e', 'l','o', ' ', 'w', 'r', 'd']\n"})}),"\n",(0,t.jsx)(n.h3,{id:"arrayfrom",children:(0,t.jsx)(n.em,{children:"Array.from()"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"Array.from()"})," can copy not only ",(0,t.jsx)(n.em,{children:"array"}),"s but also array-like object"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const copy = [...iterable]\n\nconst copy = Array.from(arraylike);\n"})}),"\n",(0,t.jsx)(n.h3,{id:"arraylength",children:(0,t.jsx)(n.em,{children:"Array.length"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Be Careful!"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const a = [1, 2, 3, 4, 5];\n\na.length = 3;\nconsole.log(a); // [ 1, 2, 3 ]\n\na.length = 0;\nconsole.log(a); // []\n\na.length = 5;\nconsole.log(a); // [ <5 empty items> ]\n"})}),"\n",(0,t.jsx)(n.h3,{id:"entries",children:(0,t.jsx)(n.em,{children:"entries()"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const letters = [..."Hello world"];\nlet everyother = "";\nfor (const [index, letter] of letters.entries()) {\n  if (index % 2 === 0) {\n    everyother += letter;\n  }\n}\nconsole.log(everyother); // Hlowrd\n'})}),"\n",(0,t.jsx)(n.h3,{id:"foreach",children:(0,t.jsx)(n.em,{children:"forEach()"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"cannot break the loop in the middle"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"find",children:(0,t.jsx)(n.em,{children:"find()"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["return ",(0,t.jsx)(n.code,{children:"undefined"})," if the matching element does not exist in the array"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"findindex",children:(0,t.jsx)(n.em,{children:"findIndex()"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["return ",(0,t.jsx)(n.code,{children:"-1"})," if the matching element does not exist in the array"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"every",children:(0,t.jsx)(n.em,{children:"every()"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["return ",(0,t.jsx)(n.code,{children:"false"})," as soon as a falsy value is found"]}),"\n",(0,t.jsxs)(n.li,{children:["return ",(0,t.jsx)(n.code,{children:"true"})," for an empty array"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"some",children:(0,t.jsx)(n.em,{children:"some()"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["return ",(0,t.jsx)(n.code,{children:"true"})," as soon as a truthy value is found"]}),"\n",(0,t.jsxs)(n.li,{children:["return ",(0,t.jsx)(n.code,{children:"true"})," for an empty array"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"slice",children:(0,t.jsx)(n.em,{children:"slice()"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const a = [1, 2, 3, 4, 5];\nconst b = a.slice(-4, -1);\nconsole.log(`a=${a}, b=${b}`); // a=1,2,3,4,5, b=2,3,4\nb[0] = 100;\nconsole.log(`a=${a}, b=${b}`); // a=1,2,3,4,5, b=100,3,4\n"})}),"\n",(0,t.jsx)(n.h3,{id:"splice",children:(0,t.jsx)(n.em,{children:"splice()"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"return deleted elements as an array"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Note:"})}),"\n",(0,t.jsxs)(n.p,{children:["the second arg is a ",(0,t.jsx)(n.strong,{children:"length (or the num of elements to be deleted)"}),", not an end position."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"splice(start, length)\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const a = [1, 2, 3, 4, 5, 6, 7, 8];\nconst x = a.splice(4);    // x=5,6,7,8, a=1,2,3,4\nconst y = a.splice(1, 2); // y=5,6,7,8, a=1,4\nconst z = a.splice(1, 1); // z=4, a=1\n\nconst a = [1, 2, 3, 4, 5];\na.splice(2, 0, 100, 200);             // [1, 2, 100, 200, 3, 4, 5]\na.splice(2, 2, [1, 2], 3);            // [ 1, 2, [ 1, 2 ], 3, 3, 4, 5 ]\na.splice(a.length, 0, ...[300, 400]); // [ 1, 2, [ 1, 2 ], 3, 3, 4, 5, 300, 400 ]\n"})}),"\n",(0,t.jsx)(n.h3,{id:"indexof",children:(0,t.jsx)(n.em,{children:"indexOf()"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["compare elements by ",(0,t.jsx)(n.code,{children:"==="})]}),"\n",(0,t.jsxs)(n.li,{children:["but ",(0,t.jsx)(n.strong,{children:"cannot"})," find ",(0,t.jsx)(n.code,{children:"NaN"})]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"includes",children:(0,t.jsx)(n.em,{children:"includes()"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["compare elements by ",(0,t.jsx)(n.code,{children:"==="})]}),"\n",(0,t.jsxs)(n.li,{children:["can find ",(0,t.jsx)(n.code,{children:"NaN"})]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const a = [1, true, 3, NaN];\n\na.includes(NaN); // true\na.indexOf(NaN); // -1\n"})}),"\n",(0,t.jsx)(n.h3,{id:"sort",children:(0,t.jsx)(n.em,{children:"sort()"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["sorts an array by ",(0,t.jsx)(n.strong,{children:"alphabetical"})," order as default"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"function(a, b)"})," as the second argument","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["returns greater than 0 -> should replace ",(0,t.jsx)(n.em,{children:"a"})," and ",(0,t.jsx)(n.em,{children:"b"})]}),"\n",(0,t.jsxs)(n.li,{children:["returns 0 -> order of ",(0,t.jsx)(n.em,{children:"a"})," and ",(0,t.jsx)(n.em,{children:"b"})," is irrelevant"]}),"\n",(0,t.jsxs)(n.li,{children:["returns less than 0 -> should not replace ",(0,t.jsx)(n.em,{children:"a"})," and ",(0,t.jsx)(n.em,{children:"b"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const a = [33, 4, 1111, 222];\na.sort(); // [ 1111, 222, 33, 4 ] <- be careful!!\n\na.sort((a, b) => a - b); // [ 4, 33, 222, 1111 ]\n\na.sort((a, b) => b - a); // [ 1111, 222, 33, 4 ]\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const ss = [\"ant\", \"Bug\", \"cat\", \"Dog\"];\nss.sort(); // [ 'Bug', 'Dog', 'ant', 'cat' ]\n\nss.sort((s: string, t: string) => {\n  const a = s.toLowerCase();\n  const b = t.toLowerCase();\n\n  if (a < b) return -1;\n  if (a > b) return 1;\n  return 0;\n}); // [ 'ant', 'Bug', 'cat', 'Dog' ]\n"})}),"\n",(0,t.jsx)(n.h3,{id:"reverse",children:(0,t.jsx)(n.em,{children:"reverse()"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"in-place"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"chapter-8-functions",children:"Chapter 8. Functions"}),"\n",(0,t.jsx)(n.p,{children:"JavaScript functions are simply a kind of JavaScript obects."}),"\n",(0,t.jsx)(n.h3,{id:"properties",children:"Properties"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"length: arity of the function"}),"\n",(0,t.jsx)(n.li,{children:"name: the name of the function"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"declarations",children:"Declarations"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"function declarations are hoisted"})," to the top of the code","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["functions defined as expression are ",(0,t.jsx)(n.strong,{children:"not"})," hoisted"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"a function defined within a block only exists within that block"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"this",children:(0,t.jsx)(n.code,{children:"this"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.strong,{children:[(0,t.jsx)(n.code,{children:"this"})," is a ",(0,t.jsx)(n.em,{children:"keyward"}),", not a variable"]})}),"\n",(0,t.jsx)(n.h3,{id:"arrows-vs-others",children:"Arrows vs. Others"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"center"}}),(0,t.jsx)(n.th,{style:{textAlign:"center"},children:"arrows"}),(0,t.jsx)(n.th,{style:{textAlign:"center"},children:"others"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"center"},children:(0,t.jsx)(n.code,{children:"this"})}),(0,t.jsx)(n.td,{style:{textAlign:"center"},children:"the environment in which they are defined"}),(0,t.jsx)(n.td,{style:{textAlign:"center"},children:"invocation context"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"center"},children:(0,t.jsx)(n.code,{children:"prototype"})}),(0,t.jsx)(n.td,{style:{textAlign:"center"},children:"not exist"}),(0,t.jsx)(n.td,{style:{textAlign:"center"},children:"exists"})]})]})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const o = {\n  m: function () {\n    const self = this;\n    console.log("this === o in m:", this === o); // true\n\n    function f() {\n      console.log("this === o in f:", this === o); // false\n      console.log("self === o in f:", self === o); // true\n    }\n\n    const g = () => {\n      console.log("this === o in g:", this === o); // true\n    };\n\n    f();\n    g();\n  },\n};\no.m();\n'})}),"\n",(0,t.jsx)(n.h3,{id:"constructor",children:"Constructor"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"parentheses can be omitted"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"o = new Object();\no = new Object; // equivalent to new Object()\n"})}),"\n",(0,t.jsx)(n.h3,{id:"indirect-invocation",children:"Indirect Invocation"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["JavaScript functions are objects which has two methods","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.em,{children:"call()"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.em,{children:"apply()"})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"a function is callable as a method of any object"})," even if it is not actually a method of the object"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"call-and-apply",children:[(0,t.jsx)(n.em,{children:"call()"})," and ",(0,t.jsx)(n.em,{children:"apply()"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["first argument: invocation context which becomes the value of the ",(0,t.jsx)(n.code,{children:"this"})," within the body of the function","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["cannot override ",(0,t.jsx)(n.code,{children:"this"})," of array funcitons"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"function compose(f, g) {\n  return function (...args) {\n    return f.call(this, g.apply(this, args));\n  };\n}\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const trace = (o, m) => {\n  const original = o[m];\n  o[m] = function (...args) {\n    console.log(new Date(), "Entering:", m);\n    const result = original.apply(this, args);\n    console.log(new Date(), "Exiting:", m);\n    return result;\n  };\n};\n\nconst o = {\n  sum: function (start, end) {\n    let s = 0;\n    for (let i = start; i < end; i++) {\n      s += i;\n    }\n    return s;\n  },\n};\n\ntrace(o, "sum", 3, 7);\nconsole.log(o["sum"](3, 7));\n// 2021-10-24T13:28:43.769Z Entering: sum\n// 2021-10-24T13:28:43.773Z Exiting: sum\n// 18\n'})}),"\n",(0,t.jsx)(n.h4,{id:"bind",children:(0,t.jsx)(n.em,{children:"bind()"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["binds function ",(0,t.jsx)(n.em,{children:"f"})," to ",(0,t.jsx)(n.em,{children:"object"})," (i.e. let ",(0,t.jsx)(n.em,{children:"f"})," to be a method of ",(0,t.jsx)(n.em,{children:"object"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:["apply ",(0,t.jsx)(n.em,{children:"args"})," to the parameters of ",(0,t.jsx)(n.em,{children:"f"})," partially"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"f.bind(object, ...args)\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"function f(y) {\n  return this.x + y;\n}\nconst o = { x: 1 };\nconst g = f.bind(o); // bind f to o\nconsole.log(g(2)); // 3; equivalent to o.f(2)\n\nconst p = { x: 10, g };\nconsole.log(p.g(2)); // 3; g is still bound to o\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const sum = (x, y) => x + y;\nconst succ = sum.bind(null, 1);\nconsole.log(succ(2)); // 3\n"})}),"\n",(0,t.jsx)(n.h3,{id:"implicit-function-invocation",children:"Implicit Function Invocation"}),"\n",(0,t.jsx)(n.p,{children:"JavaScript language features implicitly invoke functions."}),"\n",(0,t.jsx)(n.p,{children:"see p.191"}),"\n",(0,t.jsx)(n.h3,{id:"parameter-defaults",children:"Parameter Defaults"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"since ES6"}),"\n",(0,t.jsxs)(n.li,{children:["default arguments are evaluated ",(0,t.jsx)(n.strong,{children:"when the function is called"}),", not defined"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const rectangle = (width, height = width * 2) => ({ width, height });\n\nrectangle(1); // { width: 1, height: 2 }\n"})}),"\n",(0,t.jsx)(n.h3,{id:"rest-parameters",children:"Rest Parameters"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["since ES6","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"arguments"})," object used before"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"if there is no any rest argument, the value of the parameter get to be an empty array."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const max = (first = -Infinity, ...rest) => {\n  let maxValue = first;\n  for (const n of rest) {\n    if (n > maxValue) maxValue = n;\n  }\n  return maxValue;\n};\n\nmax(1, 10, 100, 2, 3, 1000, 4, 5, 6); // 1000\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const timed = (f) => {\n  return (...args) => {\n    console.log(`Entering function ${f.name}`);\n    const startTime = Date.now();\n    try {\n      return f(...args);\n    } finally {\n      console.log(`Exiting ${f.name} after ${Date.now() - startTime}ms`);\n    }\n  };\n};\n\nconst benchmark = (n) => {\n  let sum = 0;\n  for (let i = 1; i <= n; ++i) sum += i;\n  return sum;\n};\n\nconsole.log(timed(benchmark)(1_000_000));\n// Entering function benchmark\n// Exiting benchmark after 3ms\n// 500000500000\n"})}),"\n",(0,t.jsx)(n.h3,{id:"destructing-function-arguments-into-parameters",children:"Destructing Function Arguments into Parameters"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const vectorMultiply = ({ x, y, z=0 }, scalar) => (\n  { x: x * scalar, y: y * scalar , z: z * scalar}\n);\n\nconsole.log(vectorMultiply({ x: 1, y: 2 }, 2)); // { x: 2, y: 4, z: 0 }\n\n\n// {property name: parameter name}\nconst vectorAdd = ({ x: x1, y: y1 }, { x: x2, y: y2 }) => ({\n  x: x1 + x2,\n  y: y1 + y2,\n});\n\nconsole.log(vectorAdd({ x: 1, y: 2 }, { x: 3, y: 4 })); // { x: 4, y: 6 }\n"})}),"\n",(0,t.jsx)(n.p,{children:"rest props are spreadable"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"since ES2018"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const vectorMultiply = ({ x, y, z = 0, ...props }, scalar) => ({\n  x: x * scalar,\n  y: y * scalar,\n  z: z * scalar,\n  ...props,\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"function-properties",children:"Function Properties"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const uniqueInteger = () => uniqueInteger.counter++;\nuniqueInteger.counter = 0;\n\nconsole.log(uniqueInteger()); // 0\nconsole.log(uniqueInteger()); // 1\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const factorial = (n) => {\n  if (Number.isInteger(n) && n > 0) {\n    if (!(n in factorial)) {\n      factorial[n] = n * factorial(n - 1);\n    }\n    return factorial[n];\n  } else {\n    return NaN;\n  }\n};\n\nfactorial[1] = 1; // initialize factorial function\n\nconsole.log(factorial(6)); // 720\nconsole.log(factorial[5]); // 120; cached value\n"})}),"\n",(0,t.jsx)(n.h3,{id:"closures",children:"Closures"}),"\n",(0,t.jsx)(n.h4,{id:"lexical-scope",children:"lexical scope"}),"\n",(0,t.jsxs)(n.p,{children:["functions are executed using the variable scope that was in effect ",(0,t.jsx)(n.strong,{children:"when they were defined"}),", not the variable scope that is in effect when they are invoked."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const counter = () => {\n  let n = 0;\n  return {\n    count: () => ++n,\n    reset: () => {n = 0;},\n  };\n};\n\nconst c1 = counter(), c2 = counter();\n\nconsole.log(c1.count()); // 1\nconsole.log(c2.count()); // 1\n\nc1.reset();\n\nconsole.log(c1.count()); // 1\nconsole.log(c2.count()); // 2\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const counter = (n) => ({\n  get count() {\n    return ++n;\n  },\n  set count(m) {\n    if (m > n) n = m;\n    else throw Error("count can only be set to a larger value");\n  },\n});\n\nconst c = counter(1000);\n\nconsole.log(c.count); // 1001\nconsole.log(c.count); // 1002\nc.count = 2000;\nconsole.log(c.count); // 2001\nc.count = 2000; // Error: count can only be set to a larger value\n'})}),"\n",(0,t.jsx)(n.p,{children:"fantastic!"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'function memoize(f) {\n  const cache = new Map();\n\n  return function (...args) {\n    const key = args.length + args.join("+");\n    if (cache.has(key)) {\n      return cache.get(key);\n    } else {\n      const res = f.apply(this, args);\n      cache.set(key, res);\n      return res;\n    }\n  };\n}\n\n// recursive functions share the map object\nconst factorial = memoize(function (n) {\n  return n <= 1 ? 1 : n * factorial(n - 1);\n});\n\nconsole.log(factorial(5)); // 120\n'})}),"\n",(0,t.jsx)(n.h2,{id:"chapter-9-classes",children:"Chapter 9. Classes"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"it is bast to understand up front that JavaScript's classes and prototype-based inheritance mechanism are substantially different from the classes and class-based inheritance mechanism of Java and similar languages."}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["in JavaScript, a class is a set of objects that inherit properties from the same prototype object; ",(0,t.jsx)(n.em,{children:"prototype-based inheritance"})]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"constructors",children:"Constructors"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"constructors are the public identity of a class"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"in JavaScript, which of a class a object is which from a constructor the object is created"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'function range(from, to) {\n  const r = Object.create(range.methods);\n\n  r.from = from;\n  r.to = to;\n\n  return r;\n}\n\nrange.methods = {\n  includes(x) {\n    return this.from <= x && x <= this.to;\n  },\n  *[Symbol.iterator]() {\n    for (let x = Math.ceil(this.from); x <= this.to; x++) {\n      yield x;\n    }\n  },\n  toString() {\n    return "(" + this.from + "..." + this.to + ")";\n  },\n};\n\nconst r = range(1, 3);\nconsole.log(r.includes(2)); // true\nconsole.log(r.toString()); // (1...3)\nconst a = [...r];\nconsole.log(a); // [ 1, 2, 3 ]\n'})}),"\n",(0,t.jsxs)(n.p,{children:["if you use a constructor with ",(0,t.jsx)(n.em,{children:"new"})," keyword"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"a new object is created automatically before the constructor is called"}),"\n",(0,t.jsxs)(n.li,{children:["the new object inherits from ",(0,t.jsx)(n.em,{children:"prototype"})," property of the function"]}),"\n",(0,t.jsxs)(n.li,{children:["the constructor can access the new object through ",(0,t.jsx)(n.code,{children:"this"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"i.e. the constructor is called as a method of the object"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"the new object is returned automatically"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Note:"})}),"\n",(0,t.jsxs)(n.p,{children:["arrow functions cannot be used as constructor as this way because arrows inherit ",(0,t.jsx)(n.code,{children:"this"})," from the context in which the arrows are defined, which means that the ",(0,t.jsx)(n.code,{children:"this"})," of an arrow refers to the prototype object, not a new object."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'function Range(from, to) {\n  this.from = from;\n  this.to = to;\n}\n\nRange.prototype = {\n  includes: function (x) {\n    return this.from <= x && x <= this.to;\n  },\n  [Symbol.iterator]: function* () {\n    for (let x = Math.ceil(this.from); x <= this.to; x++) {\n      yield x;\n    }\n  },\n  toString: function () {\n    return "(" + this.from + "..." + this.to + ")";\n  },\n};\n\nconst r = new Range(1, 3);\nconsole.log(r.includes(2)); // true\nconsole.log(r.toString()); // (1...3)\nconst a = [...r];\nconsole.log(a); // [ 1, 2, 3 ]\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"class-keyword",children:[(0,t.jsx)(n.em,{children:"class"})," keyword"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"class declarations are NOT hoisted"})}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'class Range {\n  constructor(from, to) {\n    this.from = from;\n    this.to = to;\n  }\n\n  static parse(s) {\n    const matches = s.match(/^\\((\\d+)\\.\\.\\.(\\d+)\\)$/);\n    if (!matches) {\n      throw new TypeError(`Cannot parse Range from "${s}".`);\n    }\n    return new Range(parseInt(matches[1]), parseInt(matches[2]));\n  }\n\n  includes(x) {\n    return this.from <= x && x <= this.to;\n  }\n  *[Symbol.iterator]() {\n    for (let x = Math.ceil(this.from); x <= this.to; x++) {\n      yield x;\n    }\n  }\n  toString() {\n    return `(${this.from}...${this.to})`;\n  }\n}\n\nconst r = new Range(1, 3);\nconsole.log(r.includes(2)); // true\nconsole.log(r.toString()); // (1..3)\nconst a = [...r];\nconsole.log(a); // [ 1, 2, 3 ]\n\nconst r2 = Range.parse("(1...10)");\nconsole.log(r2); // Range { from: 1, to: 10 }\n'})}),"\n",(0,t.jsx)(n.h4,{id:"instanceof",children:(0,t.jsx)(n.em,{children:"instanceof()"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"o instanceof C\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["returns ",(0,t.jsx)(n.code,{children:"true"})," if ",(0,t.jsx)(n.code,{children:"o"})," inherits from ",(0,t.jsx)(n.code,{children:"C.prototype"})]}),"\n",(0,t.jsxs)(n.li,{children:["the inheritance need not be direct","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["e.g. ",(0,t.jsx)(n.code,{children:"true"})," when right-hand side is a subclass of ",(0,t.jsx)(n.code,{children:"C"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"isprototypeof",children:(0,t.jsx)(n.em,{children:"isPrototypeOf()"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"range.methods.isPrototypeOf(r);\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"a way to test the prototype chain of an object without the constructor"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"static-methods",children:"Static Methods"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["static methods are ",(0,t.jsx)(n.strong,{children:"defined as properties of the constructor"})," rather than properties of the prototype object","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["in ",(0,t.jsx)(n.em,{children:"Range"})," class example above, we call static method ",(0,t.jsx)(n.em,{children:"parse"})," such as ",(0,t.jsx)(n.code,{children:"Range.parse()"})," rather than ",(0,t.jsx)(n.code,{children:"Range.prototype.parse()"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"static-fields",children:"Static Fields"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["static fields must be defined out of the class body","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"the class should be defined already"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"class Complex {\n  constructor(real, imaginary) {\n    this.r = real;\n    this.i = imaginary;\n  }\n\n  plus(that) {\n    return new Complex(this.r + that.r, this.i + that.i);\n  }\n  times(that) {\n    return new Complex(\n      this.r * that.r - this.i * that.i,\n      this.r * that.i + this.i * that.r\n    );\n  }\n\n  static sum(c, d) {\n    return c.plus(d);\n  }\n  static product(c, d) {\n    return c.times(d);\n  }\n\n  get real() {\n    return this.r;\n  }\n  get imaginary() {\n    return this.i;\n  }\n  get magnitude() {\n    return Math.hypot(this.r, this.i);\n  }\n\n  toString() {\n    return `{${this.r}, ${this.i}}`;\n  }\n\n  equals(that) {\n    return that instanceof Complex && this.r === that.r && this.i === that.i;\n  }\n}\n\n// static fields\nComplex.ZERO = new Complex(0, 0);\nComplex.ONE = new Complex(1, 0);\nComplex.I = new Complex(0, 1);\n\nconst c = new Complex(2, 3);\nconst d = new Complex(c.i, c.r);\nconsole.log(c.plus(d).toString()); // {5, 5}\nconsole.log(c.magnitude); // 3.6055512754639896\nconsole.log(Complex.product(c, d)); // Complex { r: 0, i: 13 }\nconsole.log(Complex.ZERO.toString()); // {0, 0}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"adding-methods-to-existing-classes",children:"Adding Methods to Existing Classes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"JavaScript inheritance is to refer to a prototype object"}),"\n",(0,t.jsxs)(n.li,{children:["therefore an object inherits properties from its prototype ",(0,t.jsx)(n.strong,{children:"even if the properties of the prototype change after the object is created."})]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"subclasses",children:"Subclasses"}),"\n",(0,t.jsxs)(n.p,{children:["you can create subclass to share the behavior of an object, but ",(0,t.jsxs)(n.strong,{children:["prefer ",(0,t.jsx)(n.em,{children:"composition"})," (or ",(0,t.jsx)(n.em,{children:"delegation"}),")"]})," to ",(0,t.jsx)(n.em,{children:"inheritance"})]}),"\n",(0,t.jsx)(n.h4,{id:"javascript-inheritance-mechanism",children:"JavaScript Inheritance Mechanism"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'function Range(from, to) {\n  this.from = from;\n  this.to = to;\n}\n\nRange.prototype = {\n  includes: function (x) {\n    return this.from <= x && x <= this.to;\n  },\n  [Symbol.iterator]: function* () {\n    for (let x = Math.ceil(this.from); x <= this.to; x++) {\n      yield x;\n    }\n  },\n  toString: function () {\n    return "(" + this.from + "..." + this.to + ")";\n  },\n};\n\nfunction Span(start, span) {\n  if (span >= 0) {\n    this.from = start;\n    this.to = start + span;\n  } else {\n    this.to = start;\n    this.from = start + span;\n  }\n}\n\n// Span prototype object inherits properties of Range prototype object\nSpan.prototype = Object.create(Range.prototype);\nSpan.prototype.constructor = Span;\n\nSpan.prototype.toString = function () {\n  return `(${this.from}... +${this.to - this.from})`;\n};\n\n// Span instance s inherits not only the properties of the prototype of Span\n// but also the properties of the prototype of Range\n// because Span prototype object inherits the properties of the Range prototype object\nconst s = new Span(0, 10);\nconsole.log(s.toString()); // (0... +10)\n'})}),"\n",(0,t.jsxs)(n.h4,{id:"extends-and-super",children:[(0,t.jsx)(n.em,{children:"extends"})," and ",(0,t.jsx)(n.em,{children:"super"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"since ES6"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"class TypedMap extends Map {\n  constructor(keyType, valueType, entries) {\n    if (entries) {\n      for (const [k, v] of entries) {\n        if (typeof k !== keyType || typeof v !== valueType) {\n          throw new TypeError(`Wrong type for entry [${k}, ${v}]`);\n        }\n      }\n    }\n    super(entries);\n\n    // `this` must be placed after `super`\n    this.keyType = keyType;\n    this.valueType = valueType;\n  }\n\n  set(key, value) {\n    if (this.keyType && typeof key !== this.keyType) {\n      throw new TypeError(`${key} is not of type ${this.keyType}`);\n    }\n    if (this.valueType && typeof value !== this.valueType) {\n      throw new TypeError(`${value} is not of type ${this.valueType}`);\n    }\n    return super.set(key, value);\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"delegation-instead-of-inheritance",children:"Delegation Instead of Inheritance"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"class Histogram {\n  constructor() {\n    this.map = new Map();\n  }\n\n  count(key) {\n    return this.map.get(key) || 0;\n  }\n  has(key) {\n    return this.count(key) > 0;\n  }\n  get size() {\n    return this.map.size;\n  }\n  add(key) {\n    this.map.set(key, this.count(key) + 1);\n  }\n  delete(key) {\n    const cnt = this.count(key);\n    if (cnt === 1) {\n      this.map.delete(key);\n    } else if (cnt > 1) {\n      this.map.set(key, cnt - 1);\n    }\n  }\n  [Symbol.iterator]() {\n    return this.map.keys();\n  }\n  keys() {\n    return this.map.keys();\n  }\n  values() {\n    return this.map.values();\n  }\n  entries() {\n    return this.map.entries();\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"chapter-10-modules",children:"Chapter 10. Modules"}),"\n",(0,t.jsx)(n.h3,{id:"node-modules",children:"Node Modules"}),"\n",(0,t.jsx)(n.h4,{id:"exports-one-by-one",children:"Exports one by one"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"dir/\n  - stats.js\n  - main.js\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"// stats.js\nconst sum = (x, y) => x + y;\nconst square = (x) => x * x;\n\nexports.mean = (data) => data.reduce(sum) / data.length;\nexports.stddev = function (d) {\n  const m = exports.mean(d);\n  return Math.sqrt(\n    d\n      .map((x) => x - m)\n      .map(square)\n      .reduce(sum) /\n      (d.length - 1)\n  );\n};\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'// main.js\nconst stats = require("./stats.js");\nconsole.log(stats.mean([1, 2, 3, 4, 5])); // 3\n\nconst { stddev } = require("./stats");  // js ext can be omit\nconsole.log(stddev([1, 2, 3, 4, 5])); // 1.5811388300841898\n'})}),"\n",(0,t.jsx)(n.h4,{id:"exports-all-together",children:"Exports all together"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"dir/\n  - stats2.js\n  - main2.js\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"// stats2.js\nconst sum = (x, y) => x + y;\nconst square = (x) => x * x;\nconst mean = (data) => data.reduce(sum) / data.length;\nconst stddev = (d) => {\n  const m = mean(d);\n  return Math.sqrt(\n    d\n      .map((x) => x - m)\n      .map(square)\n      .reduce(sum) /\n      (d.length - 1)\n  );\n};\n\nmodule.exports = { mean, stddev };\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'// main2.js\nconst stats = require("./stats2.js");\nconsole.log(stats.mean([1, 2, 3, 4, 5])); // 3\n\nconst { stddev } = require("./stats2");\nconsole.log(stddev([1, 2, 3, 4, 5])); // 1.5811388300841898\n'})}),"\n",(0,t.jsx)(n.h3,{id:"es6-modules",children:"ES6 Modules"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"import"})," and ",(0,t.jsx)(n.em,{children:"export"})," are static","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"import"}),"s are hoisted to the top of the code"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"re-exports",children:"Re-Exports"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'import { mean } from "./stats/mean.js";\nimport { stddev } from "./stats/stddev.js";\nexport { mean, stddev };\n\n// re-export statement equivalent to above\nexport { mean } from "./stats/mean.js";\nexport { stddev } from "./stats/stddev.js";\n'})}),"\n",(0,t.jsx)(n.h2,{id:"chapter-11-the-javascript-standard-library",children:"Chapter 11. The JavaScript Standard Library"}),"\n",(0,t.jsx)(n.h3,{id:"sets",children:"Sets"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["members are distinguished by ",(0,t.jsx)(n.code,{children:"==="}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"it determines object equality by reference (arrays are compared by reference too)"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"holds insertion order"}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"constructor-1",children:"Constructor"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const s = new Set(iterable);\n"})}),"\n",(0,t.jsx)(n.h4,{id:"size",children:"size"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"s.size  // array.length like\n"})}),"\n",(0,t.jsx)(n.h4,{id:"add",children:(0,t.jsx)(n.em,{children:"add()"})}),"\n",(0,t.jsx)(n.p,{children:"returns the set itself"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'s.add("a").add("b").add("c")\n'})}),"\n",(0,t.jsx)(n.h4,{id:"delete",children:(0,t.jsx)(n.em,{children:"delete()"})}),"\n",(0,t.jsxs)(n.p,{children:["returns ",(0,t.jsx)(n.code,{children:"true"})," if an element is deleted from the set"]}),"\n",(0,t.jsx)(n.h4,{id:"iteration",children:"iteration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const s = new Set([1, 2, 3]);\nfor (const x of s) {\n  console.log(x); // 1 2 3\n}\n\nconst arr = [...s];\nconst ma = Math.max(...s);\n"})}),"\n",(0,t.jsx)(n.h3,{id:"maps",children:"Maps"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"holds insertion order (at iteration)"}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"constructor-2",children:"Constructor"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const m = new Map([\n  ["one", 1],\n  ["two", 2],\n]);\n\nconst clone = new Map(m);\n\nconst o = { x: 1, y: 2 };\nconst p = new Map(Object.entries(o)); // new Map([["x", 1], ["y", 2]])\n'})}),"\n",(0,t.jsx)(n.h4,{id:"size-1",children:"size"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"m.size  // array.length like\n"})}),"\n",(0,t.jsx)(n.h4,{id:"set",children:(0,t.jsx)(n.em,{children:"set()"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'m.set("one", 1).set("two", 2);\n'})}),"\n",(0,t.jsx)(n.h4,{id:"get",children:(0,t.jsx)(n.em,{children:"get()"})}),"\n",(0,t.jsxs)(n.p,{children:["returns ",(0,t.jsx)(n.code,{children:"undefined"})," if given a key does not exist in the map."]}),"\n",(0,t.jsx)(n.h4,{id:"delete-1",children:(0,t.jsx)(n.em,{children:"delete()"})}),"\n",(0,t.jsxs)(n.p,{children:["returns ",(0,t.jsx)(n.code,{children:"true"})," if the deletion succeeded."]}),"\n",(0,t.jsx)(n.h4,{id:"iteration-1",children:"iteration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const m = new Map([\n  ["one", 1],\n  ["two", 2],\n]);\n\nfor (const [key, value] of m) {\n  console.log(`${key}: ${value}`);\n}\n// one: 1\n// two: 2\n\nconst arr = [...m]; // [["one", 1], ["two", 2]]\n'})}),"\n",(0,t.jsx)(n.h3,{id:"typed-arrays",children:"Typed Arrays"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"since ES6"}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Array.isArray(typedArray)"})," returns ",(0,t.jsx)(n.code,{children:"false"})]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"constructors-1",children:"Constructors"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.em,{children:"Int8Array()"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.em,{children:"Uint8Array()"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.em,{children:"Uint8ClampedArray()"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.em,{children:"Int16Array()"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.em,{children:"Uint16Array"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.em,{children:"Int32Array()"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.em,{children:"Uint32Array()"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.em,{children:"BigInt64Array()"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.em,{children:"BigUint64Array()"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.em,{children:"Float32Array()"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.em,{children:"Float64Array()"})}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"initialization",children:"Initialization"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const bytes = new Uint8Array(1024); // 1024 bytes\n\nconst white = Uint8ClampedArray.of(255, 255, 255, 0)\n\nconst ints = Uint32Array.from(white);\n"})}),"\n",(0,t.jsx)(n.h4,{id:"array-buffer",children:"Array Buffer"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["a ",(0,t.jsx)(n.em,{children:"TypedArray"})," object has ",(0,t.jsx)(n.em,{children:"buffer"})," property holding an ",(0,t.jsx)(n.em,{children:"ArrayBuffer"})," object"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"ArrayBuffer"})," object itself cannot be accessed to read and write the bytes"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const buf = new ArrayBuffer(1024 * 1024);\nbuf.size  // 1 MB\n\nconst asbytes = new Uinit8Array(buf);\nconst asints = new Int32Array(buf);\nconst lastKB = new Uint8Array(buf, 1023 * 1024)\nconst ints2ndKB = new Int32Array(buf, 1024, 256);\n"})}),"\n",(0,t.jsx)(n.h4,{id:"methods",children:"Methods"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"slice()"}),": returns ",(0,t.jsx)(n.strong,{children:"new"})," array"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"subarray()"}),": returns a reference"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const bytes = new Uint8Array(12);\nconst pattern = new Uint8Array([0, 1, 2, 3]);\n\nbytes.set(pattern);\nconsole.log(bytes.slice(0, 12));\n// Uint8Array(12) [0, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0]\n\nbytes.set(pattern, 4);\nconsole.log(bytes.slice(0, 12));\n// Uint8Array(12) [0, 1, 2, 3, 0, 1, 2, 3, 0, 0, 0, 0]\n\nbytes.set([0, 1, 2, 3], 8);\nconsole.log(bytes.slice(0, 12));\n// Uint8Array(12) [0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3]\n\nconst last3 = bytes.subarray(bytes.length - 3, bytes.length);\nconsole.log(last3); // Uint8Array(3) [ 1, 2, 3 ]\n"})}),"\n",(0,t.jsx)(n.h3,{id:"regexp",children:"RegExp"}),"\n",(0,t.jsx)(n.h4,{id:"replace",children:(0,t.jsx)(n.em,{children:"replace()"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"g-flag: replace all occurence"}),"\n",(0,t.jsx)(n.li,{children:"i-flag: case-insensitive"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const s = "JAVASCRIPT\\tjavaSCRIPT\\nJAVAscript";\nconst t = s.replace(/javascript/gi, "JavaScript");\nconsole.log(t);\n// JavaScript      JavaScript\n// JavaScript\n\nconst quote = /"([^"]*)"/g;\nconst text = \'He said "stop"\';\nconst res = text.replace(quote, "!!$1!!");\nconsole.log(res); // He said !!stop!!\n\nconst quote2 = /"(?<quotedText>[^"]*)"/g;\nconst res2 = text.replace(quote2, "!!$<quotedText>!!");\nconsole.log(res2); // He said !!stop!!\n\nconst d = "15 times 15 is 225";\nconsole.log(d.replace(/\\d+/gu, (n) => parseInt(n).toString(16)));\n// f times f is e1\n'})}),"\n",(0,t.jsx)(n.h4,{id:"match",children:(0,t.jsx)(n.em,{children:"match()"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["if g-flag is given, returns an array containing all matched substrings;","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["otherwise returns an ",(0,t.jsx)(n.em,{children:"match"})," object"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h5,{id:"match-object",children:[(0,t.jsx)(n.em,{children:"match"})," Object"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"m[0]"}),": entire matching substring"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"m[1]"}),", ",(0,t.jsx)(n.code,{children:"m[2]"}),", ...: groups in ",(0,t.jsx)(n.code,{children:"m[0]"})]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"m.input"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"m.index"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"m.gruops.<group_name>"})}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const ms = \"7 plus 8 equals 15\".match(/\\d+/g);\nconsole.log(ms); // [ '7', '8', '15' ]\n\n\nconst urlPattern = /(?<protocol>\\w+):\\/\\/(?<host>[\\w.]+)\\/(?<path>\\S*)/;\nconst text = \"Visit my blog at http://www.example.com/~david\";\nconst m = text.match(urlPattern);\n\nconsole.log(m[0]); // http://www.example.com/~david\nconsole.log(m[1]); // http\nconsole.log(m[2]); // www.example.com\nconsole.log(m[3]); // ~david\n\nconsole.log(m.input); // Visit my blog at http://www.example.com/~david\nconsole.log(m.index); // 17\n\nconsole.log(m.groups.protocol); // http\nconsole.log(m.groups.host); // www.example.com\nconsole.log(m.groups.path); // ~david\n"})}),"\n",(0,t.jsx)(n.h4,{id:"matchall",children:(0,t.jsx)(n.em,{children:"matchAll()"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["returns an array of match objects","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["c.f. ",(0,t.jsx)(n.em,{children:"match()"})," with g-flag returns an array of matched substrings"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["prefer ",(0,t.jsx)(n.em,{children:"matchAll"})," to ",(0,t.jsx)(n.em,{children:"exec()"})," because ",(0,t.jsx)(n.em,{children:"lastIndex"})," property of ",(0,t.jsx)(n.em,{children:"RegExp"})," object that ",(0,t.jsx)(n.em,{children:"exec()"})," uses makes your code error prone"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const wordsPattern = /\\b\\p{Alphabetic}+\\b/gu;\nconst text = "This is a na\xefve test of the matchAll() method.";\nfor (const w of text.matchAll(wordsPattern)) {\n  console.log(`${w.index}: ${w[0]}`);\n}\n\n// 0: This\n// 5: is\n// 8: a\n// 10: na\xefve\n// 16: test\n// 21: of\n// 24: the\n// 28: matchAll\n// 39: method\n'})}),"\n",(0,t.jsx)(n.h3,{id:"dates-and-times",children:"Dates and Times"}),"\n",(0,t.jsx)(n.h4,{id:"date-1",children:"Date"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Be careful that month starts with 0 but day of a month starts with 1!!"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["use ",(0,t.jsx)(n.em,{children:"Date.UTC()"})," constructor to create a Date object from UTC datetime"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"console.log(dateObject)"})," display the datetime as local time zone by default"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["use ",(0,t.jsx)(n.em,{children:"dateObject.toUTCString()"})," to display datetime as UTC"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["use whether to use ",(0,t.jsx)(n.em,{children:"getXXX"})," and ",(0,t.jsx)(n.em,{children:"setXXX"}),", or ",(0,t.jsx)(n.em,{children:"getUTCXXX"})," and ",(0,t.jsx)(n.em,{children:"setUTCXXX"})," properly"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["use ",(0,t.jsx)(n.em,{children:"performance"})," object (such as ",(0,t.jsx)(n.em,{children:"perf_hooks"})," in Node.js) for high-precision timer"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const now = new Date();\n\nconst epoch = new Date(0); // given interger is interpreted as milliseconds from epoch\nconsole.log(epoch); // 1970-01-01T00:00:00.000Z\n\nconst century = new Date(\n  2100, // year\n  0, // January; month starts with 0!\n  1, // 1st; day of a month starts with 1!\n  2, // hour\n  3, // minute\n  4, // second\n  5 // millisecond\n);\nconsole.log(century); // 2100-01-01T02:03:04.005Z\n\nconsole.log(`day of month: ${century.getDate()}`); // day of month: 1\n// Sunday is 0, Saturday is 6\nconsole.log(`day of week: ${century.getDay()}`); // day of week: 5; Friday\n\n\nconst utcCentury = new Date(Date.UTC(2100, 0, 1));\nconsole.log(utcCentury.toUTCString()); // Fri, 01 Jan 2100 00:00:00 GMT\n\n// get and set year as local time zone\nutcCentury.setFullYear(utcCentury.getFullYear() + 1);\n\n// set and set year as UTC\nutcCentury.setUTCFullYear(utcCentury.getUTCFullYear() + 1);\n\nconsole.log(`timestamp [ms]: ${century.getTime()}`); // timestamp [ms]: 4102452184005\nconsole.log(`current time as timestamp [ms]: ${Date.now()}`); // current time as timestamp [ms]: 1635766448134\n\nstart = Date.now();\n// something do\nend = Date.now();\nconst duration_ms = end - start;\n"})}),"\n",(0,t.jsx)(n.h3,{id:"error-classes",children:"Error Classes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["JavaScript ",(0,t.jsx)(n.em,{children:"throw"})," and ",(0,t.jsx)(n.em,{children:"catch"})," statement can throw and catch any JavaScript value, including primitive values"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"constructor-3",children:"Constructor"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"throw new Error(message);\n"})}),"\n",(0,t.jsx)(n.h4,{id:"properties-1",children:"properties"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"name"}),": constructor name such as ",(0,t.jsx)(n.code,{children:"Error"})]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.em,{children:"message"})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"toString()"}),": ",(0,t.jsx)(n.code,{children:"<name>: <message>"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"stack"}),": a multi-line string of a stack trace"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'class HTTPError extends Error {\n  constructor(status, statusText, url) {\n    super(`${status} ${statusText}: ${url}`);\n    this.status = status;\n    this.statusText = statusText;\n    this.url = url;\n  }\n\n  get name() {\n    return "HTTPError";\n  }\n}\n\nconst err = new HTTPError(404, "Not Found", "http://example.com/");\n'})}),"\n",(0,t.jsx)(n.h3,{id:"json",children:"JSON"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"JSON.parse(string, revivier)\n"})}),"\n",(0,t.jsx)(n.h4,{id:"jsonparse",children:(0,t.jsx)(n.em,{children:"JSON.parse()"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const data = JSON.parse(text, (k, v) => { // revivier function\n  if (key[0] === "_") return undefined; // exclude properties like `_internal_prop`\n  if (\n    typeof v === "string" &&\n    /^\\d\\d\\d\\d-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d.\\d\\d\\dZ$/.test(value)\n  ) {\n    return new Date(v);\n  }\n});\n'})}),"\n",(0,t.jsx)(n.h4,{id:"jsonstringify",children:(0,t.jsx)(n.em,{children:"JSON.stringify()"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"JSON.stringify(object, filter: string[] | int[], indent: number)\nJSON.stringify(object, replacer:  (string, any) => object, indent: number)\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["it uses a ",(0,t.jsx)(n.em,{children:"toJSON()"})," method of a serialized object which is not json serializable as default"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"when an array of strings or ints is given as the second argument, stringify only specified properties holding the order"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"when an replacer function is given as the second argument, stringify properties filtered with the replacer"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const address = {\n  city: "Sapporo",\n  prefecture: "Hokkaido",\n  country: "Japan",\n  zip: "000-0000",\n  id: 0,\n};\n\nconst text = JSON.stringify(address, ["country", "zip", "city"]);\nconsole.log(text);\n// {"country":"Japan","zip":"000-0000","city":"Sapporo"}\n// holding the order of properties in the passed array\n\nconst json = JSON.stringify(address, (k, v) =>\n  typeof v === "string" ? undefined : v // exclude strings\n);\nconsole.log(json); // {"id":0}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"url-apis",children:"URL APIs"}),"\n",(0,t.jsx)(n.h4,{id:"url-class",children:"URL class"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const url = new URL("https://example.com:8000/path/name?q=term#fragment");\n\nconsole.log(url.href); // https://example.com:8000/path/name?q=term#fragment\nconsole.log(url.origin); // https://example.com:8000\nconsole.log(url.protocol); // https:\nconsole.log(url.host); // example.com:8000\nconsole.log(url.hostname); // example.com\nconsole.log(url.port); // 8000\nconsole.log(url.pathname); // /path/name\nconsole.log(url.search); // ?q=term\nconsole.log(url.hash); // #fragment\n'})}),"\n",(0,t.jsxs)(n.p,{children:["see also ",(0,t.jsx)(n.em,{children:"url.searchParams"})," property (p.321)"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const url = new URL("https://example.com");\n\nurl.pathname = "path with spaces";\nurl.search = "q=foo#bar";\n\n// automatically escaping\nconsole.log(url.pathname); // /path%20with%20spaces\nconsole.log(url.search); // ?q=foo%23bar\nconsole.log(url.href); // https://example.com/path%20with%20spaces?q=foo%23bar\n'})}),"\n",(0,t.jsx)(n.h2,{id:"chapter-12-iterators-and-generators",children:"Chapter 12. Iterators and Generators"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"since ES6"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"iterator",children:"Iterator"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"iterable"})," objects","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"any object with a special iterator method that returns an iterator object"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"iterator"})," objects","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["any object with a ",(0,t.jsx)(n.em,{children:"next()"})," method that returns an iteration result object"]}),"\n",(0,t.jsxs)(n.li,{children:["we can implement clean up processes as ",(0,t.jsx)(n.em,{children:"return()"})," optionally","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"return()"})," is called when a iterator object returns before it exhausts"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"iteration result"})," object","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["an object with ",(0,t.jsx)(n.em,{children:"value"})," property and ",(0,t.jsx)(n.em,{children:"done"})," property"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const iterable = [99, 100, 101];\nconst iterator = iterable[Symbol.iterator]();\nfor (let res = iterator.next(); !res.done; res = iterator.next()) {\n  console.log(res.value); // 99, 100, 101\n}\n\nconst list = [1, 2, 3, 4, 5];\nconst iter = list[Symbol.iterator]();\nconst head = iter.next().value;\nconst tail = [...iter];\nconsole.log(tail); // [ 2, 3, 4, 5 ]\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'class Range {\n  constructor(from, to) {\n    this.from = from;\n    this.to = to;\n  }\n\n  has(x) {\n    return typeof x === "number" && this.from <= x && x <= this.to;\n  }\n\n  toString() {\n    return `{ x | ${this.from} <= x <= ${this.to} }`;\n  }\n\n  [Symbol.iterator]() {\n    let next = Math.ceil(this.from);\n    const last = this.to;\n    return {\n      next() {\n        return next <= last ? { value: next++ } : { done: true };\n      },\n      [Symbol.iterator]() {\n        return this;\n      },\n    };\n  }\n}\n\nfor (const x of new Range(1, 10)) {\n  console.log(x);\n}\n\nconst a = [...new Range(-2, 2)];\nconsole.log(a); // [ -2, -1, 0, 1, 2 ]\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"function map(iterable, f) {\n  const iterator = iterable[Symbol.iterator]();\n  return {\n    [Symbol.iterator]() {\n      return this;\n    },\n    next() {\n      const v = iterator.next();\n      if (v.done) {\n        return v;\n      } else {\n        return { value: f(v.value) };\n      }\n    },\n  };\n}\n\nconst a = [...map(new Range(1, 4), (x) => x * x)];\nconsole.log(a); // [ 1, 4, 9, 16 ]\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const { Range } = require("./Range");\n\nfunction filter(iterable, predicate) {\n  const iterator = iterable[Symbol.iterator]();\n  return {\n    [Symbol.iterator]() {\n      return this;\n    },\n    next() {\n      for (;;) {\n        const v = iterator.next();\n        if (v.done || predicate(v.value)) {\n          return v;\n        }\n      }\n    },\n  };\n}\n\nconst a = [...filter(new Range(1, 10), (x) => x % 2 === 0)];\nconsole.log(a); // [ 2, 4, 6, 8, 10 ]\n'})}),"\n",(0,t.jsx)(n.h3,{id:"generators",children:"Generators"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"a kind of iterator defined with ES6 syntax"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"generator function"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["returns ",(0,t.jsx)(n.em,{children:"generator"})," object when invoked, instead of executing the body"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"generator"})," object"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["runs to the next ",(0,t.jsx)(n.em,{children:"yield"})," expression in the body when ",(0,t.jsx)(n.em,{children:"next()"})," is called"]}),"\n",(0,t.jsxs)(n.li,{children:["returns the value of ",(0,t.jsx)(n.em,{children:"yield"})," expression each call"]}),"\n",(0,t.jsxs)(n.li,{children:["we ",(0,t.jsx)(n.strong,{children:"cannot"})," implement ",(0,t.jsx)(n.em,{children:"return()"})," as with iterator objects"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"// generator function\nfunction* oneDigitPrimes() {\n  yield 2;\n  yield 3;\n  yield 5;\n  yield 7;\n}\n\n// generator\nconst primesGenerator = oneDigitPrimes();\n\nconsole.log(primesGenerator.next().value); // 2\nconsole.log(primesGenerator.next().value); // 3\nconsole.log(primesGenerator.next().value); // 5\nconsole.log(primesGenerator.next().value); // 7\nconsole.log(primesGenerator.next().done); // true\n\nconst primes = [...oneDigitPrimes()];\nconsole.log(primes); // [ 2, 3, 5, 7 ]\n\nlet sum = 0;\nfor (const prime of oneDigitPrimes()) {\n  sum += prime;\n}\nconsole.log(sum); // 17\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const seq = function* (from, to) {\n  for (let i = from; i <= to; i++) {\n    yield i;\n  }\n};\n\nconst a = [...seq(3, 5)];\nconsole.log(a); // [ 3, 4, 5 ]\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const o = {\n  x: 1,\n  y: 2,\n  z: 3,\n  *g() {\n    for (const key of Object.keys(this)) {\n      yield key;\n    }\n  },\n};\n\nconst a = [...o.g()];\nconsole.log(a); // [ 'x', 'y', 'z', 'g' ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"such lazy evaluation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"function* fibonacciSequence() {\n  let x = 0,\n    y = 1;\n  for (;;) {\n    yield y;\n    [x, y] = [y, x + y];\n  }\n}\n\nfunction* take(n, iterable) {\n  const it = iterable[Symbol.iterator]();\n  while (n-- > 0) {\n    const next = it.next();\n    if (next.done) {\n      return;\n    } else {\n      yield next.value;\n    }\n  }\n}\n\nconst head_5 = [...take(5, fibonacciSequence())];\nconsole.log(head_5); // [ 1, 1, 2, 3, 5 ]\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"function* zip(...iterables) {\n  const iterators = iterables.map((i) => i[Symbol.iterator]());\n  let index = 0;\n  while (iterators.length > 0) {\n    if (index >= iterators.length) {\n      index = 0;\n    }\n    const item = iterators[index].next();\n    if (item.done) {\n      iterators.splice(index, 1);\n    } else {\n      yield item.value;\n      index++;\n    }\n  }\n}\n\nconst a = [...zip([1, 2, 3], [\"a\", \"b\"], [100])];\nconsole.log(a); // [ 1, 'a', 100, 2, 'b', 3 ]\n"})}),"\n",(0,t.jsxs)(n.h4,{id:"yield",children:[(0,t.jsx)(n.em,{children:"yield"}),"*"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"function* sequence(...iterables) {\n  for (const iterable of iterables) {\n    for (const item of iterable) {\n      yield item;\n    }\n  }\n}\n\nfunction* sequence2(...iterables) {\n  // equivalent to sequence() above\n  for (const iterable of iterables) {\n    yield* iterable;\n  }\n}\n\nconst a = [...sequence2([1, 2, 3], [\"a\", \"b\"], [100])];\nconsole.log(a); // [ 1, 2, 3, 'a', 'b', 100 ]\n"})}),"\n",(0,t.jsx)(n.h2,{id:"chapter-13-asynchronous-javascript",children:"Chapter 13. Asynchronous JavaScript"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"Promise"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"since ES6"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"async"})," and ",(0,t.jsx)(n.em,{children:"await"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"since ES2017"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"for/await"})," loop","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"since ES2018"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"promise",children:"Promise"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["represent the future results of single asynchronous computations","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["e.g. ",(0,t.jsx)(n.em,{children:"setTimeout()"}),", ",(0,t.jsx)(n.em,{children:"load"})," event handler"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"cannot"})," represent ",(0,t.jsx)(n.strong,{children:"repeated"})," asynchronous computations","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["e.g. ",(0,t.jsx)(n.em,{children:"setInterval()"}),", ",(0,t.jsx)(n.em,{children:"click"})," event handler"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"terminologies",children:"Terminologies"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.em,{children:"fulfilled"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.em,{children:"rejected"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.em,{children:"pending"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.em,{children:"settled"})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"resolved"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["assume that ",(0,t.jsx)(n.code,{children:"const p: Promise = f.then(c)"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"c"})," is a callback function which takes an Promise an arugment"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"then()"})," returns a Promise ",(0,t.jsx)(n.code,{children:"p"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"c"})," returns a value ",(0,t.jsx)(n.code,{children:"v"})," after ",(0,t.jsx)(n.code,{children:"c"})," is asynchronously invoked","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["when the callback returns, ",(0,t.jsx)(n.code,{children:"p"})," is ",(0,t.jsx)(n.em,{children:"resolved"})," with the value ",(0,t.jsx)(n.code,{children:"v"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["if ",(0,t.jsx)(n.code,{children:"v"})," is not a Promise, ",(0,t.jsx)(n.code,{children:"p"})," is ",(0,t.jsx)(n.em,{children:"fulfilled"})," as well"]}),"\n",(0,t.jsxs)(n.li,{children:["if ",(0,t.jsx)(n.code,{children:"v"})," itself is a Promise, ",(0,t.jsx)(n.code,{children:"p"})," is ",(0,t.jsx)(n.em,{children:"resolved but not yet fulfilled"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["if ",(0,t.jsx)(n.code,{children:"v"})," is fulfilled, then ",(0,t.jsx)(n.code,{children:"p"})," will be fulfilled to the same value"]}),"\n",(0,t.jsxs)(n.li,{children:["if ",(0,t.jsx)(n.code,{children:"v"})," is rejected, then ",(0,t.jsx)(n.code,{children:"p"})," will be rejected for the same reason"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"e.g."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'function c1(response) {\n  const p4 = response.json();\n  return p4;\n}\n\nfunction c2(json) {\n  displayUser(json);\n}\n\nfetch("/api/user/profile").then(c1).then(c2);\n'})}),"\n",(0,t.jsx)(n.p,{children:"break it down to promises"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const p1: Promise = fetch("/api/user/profile");\nconst p2: Promise = p1.then(c1);\nconst p3: Promise = p2.then(c2);\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"promises",src:s(7215).A+"",width:"1061",height:"373"})}),"\n",(0,t.jsx)(n.h4,{id:"error-handlings",children:"Error Handlings"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["normal ",(0,t.jsx)(n.em,{children:"try/catch"})," does not work for an asynchronous code","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"we cannot handle an error caused in an asynchronous function at the point of calling the asynchronous function because the point is not on a call stack already when the asynchronous function runs"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'getJson("/api/user/profile").then(displayUserProfile, handleProfileError)\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"catch()"})," is equivalent to ",(0,t.jsx)(n.em,{children:"then(null, error)"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"catch()"})," can catch an error thrown in both ",(0,t.jsx)(n.em,{children:"getJson()"})," and ",(0,t.jsx)(n.em,{children:"displayUserProfile()"})]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'// better way\ngetJSON("/api/user/profile").then(displayUserProfile).catch(handleProfileError);\n'})}),"\n",(0,t.jsx)(n.h5,{id:"multi-catch-methods",children:"multi-catch methods"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"startAsyncOperation()\n  .then(doStageTwo)\n  .catch(recoverFromStageTwoError)\n  .then(doStageThree)\n  .then(doStageFour)\n  .then(logStageThreeAndFourErrors);\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["when ",(0,t.jsx)(n.em,{children:"startAsyncOperation()"})," or ",(0,t.jsx)(n.em,{children:"doStageTwo()"})," throws and error, ",(0,t.jsx)(n.em,{children:"recoverFromStageTwoError()"})," is called","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["if ",(0,t.jsx)(n.em,{children:"recoverFromStageTwoError()"})," returns a value, ",(0,t.jsx)(n.em,{children:"doStageThree()"})," is called"]}),"\n",(0,t.jsxs)(n.li,{children:["if ",(0,t.jsx)(n.em,{children:"recoverFromStageTwoError()"})," throws a new error, ",(0,t.jsx)(n.em,{children:"logStageThreeAndFourErrors"})," is called"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"this can be used to retry an asynchronous process"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"queryDatabase()\n  .catch(e => wait(500).then(queryDatabase))\n  .then(displayTable)\n  .catch(displayDatabaseError);\n"})}),"\n",(0,t.jsx)(n.h4,{id:"promiseall",children:(0,t.jsx)(n.em,{children:"Promise.all()"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"fulfills if all promises are fulfilled; otherwise rejects"}),"\n",(0,t.jsx)(n.li,{children:"rejects if any promise is rejected immediately"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const urls = [...]\n\nconst promises = urls.map(url => fetch(url).then(r => r.text()));\n\nPromise.all(promises)\n  .then(bodies => {/* do something */})\n  .catch(e => console.error(e));\n"})}),"\n",(0,t.jsx)(n.h4,{id:"promiseallsettled",children:(0,t.jsx)(n.em,{children:"Promise.allSettled()"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'Promise.allSettled([Promise.resolve(1), Promise.reject(2), 3])\n  .then(res => {\n    res[0]; // { status: "fulfilled", value: 1 }\n    res[1]; // { status: "rejected", value: 2 }\n    res[2]; // { status: "fulfilled", value: 3 }\n  })\n'})}),"\n",(0,t.jsx)(n.h4,{id:"promiserace",children:(0,t.jsx)(n.em,{children:"Promise.race()"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"resolves when any promise is resolved"}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"handmade-promise",children:"Handmade Promise"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'function wait(duration) {\n  return new Promise((resolve, reject) => {\n    if (duration < 0) {\n      reject(new Error("Time travel not yet implemented"));\n    }\n    setTimeout(resolve, duration);\n  });\n}\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const http = require("http");\n\nfunction getJSON(url) {\n  return new Promise((resolve, reject) => {\n    request = http.get(url, (response) => {\n      if (response.statusCode !== 200) {\n        reject(new Error(`HTTP status ${response.statusCode}`));\n        response.resume();\n      } else if (response.headers["content-type"] !== "application/json") {\n        reject(new Error("Invalid content-type"));\n        response.resume();\n      } else {\n        let body = "";\n        response.setEncoding("utf-8");\n        response.on("data", (chunk) => {\n          body += chunk;\n        });\n        response.on("end", () => {\n          try {\n            const parsed = JSON.parse(body);\n            resolve(parsed);\n          } catch (e) {\n            reject(e);\n          }\n        });\n      }\n    });\n    request.on("error", (error) => {\n      reject(error);\n    });\n  });\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"promise-sequence",children:"Promise Sequence"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"function fetchSequentially(urls) {\n  const bodies = [];\n\n  function fetchOne(url) {\n    return fetch(url)\n      .then((response) => response.text())\n      .then((body) => {\n        bodies.push(body);\n      });\n  }\n\n  let p = Promise.resolve(undefined);\n  for (url of urls) {\n    p = p.then(() => fetchOne(url));\n  }\n  return p.then(() => bodies);\n}\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"function promiseSequence(input, promiseMaker) {\n  inputs = [...inputs];\n\n  function handleNextInput(outputs) {\n    if (inputs.length === 0) {\n      return outputs;\n    } else {\n      const nextInput = inputs.shift();\n      return promiseMaker(nextInput)\n        .then((output) => outputs.concat(output))\n        .then(handleNextInput);\n    }\n  }\n  return Promise.resolve([]).then(handleNextInput);\n}\n\nfunction fetchBody(url) {\n  return fetch(url).then((r) => r.text());\n}\n\npromiseSequence(urls, fetchBody)\n  .then((bodies) => {\n    /* do something */\n  })\n  .catch(console.error);\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"promiseSequence()"})," above is recursive such as"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"Promise.resolve([])\n  .then((outputs) => {\n    ...\n    return promiseMaker(nextInput)\n      .then((output) => outpus.concat(output))\n      .then((outputs) => {\n        ...\n        return promiseMaker(nextInput)\n          .then((output) => outputs.concat(output))\n          .then((outputs) => {\n            ...\n            return outputs\n          })\n      })\n  })\n"})}),"\n",(0,t.jsxs)(n.h4,{id:"await-and-async",children:[(0,t.jsx)(n.em,{children:"await"})," and ",(0,t.jsx)(n.em,{children:"async"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"since ES2017"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"async function f(x) { /* body */ }\n\nfunction f(x) {\n  return new Promise(function(resolve, reject) {\n    try {\n      resolve(function(x) {/* body */})\n    } catch(e) {\n      reject(e);\n    }\n  })\n}\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"async function getJSON(url) {\n  const response = await fetch(url);\n  const body = await response.json();\n  return body;\n}\n\n// parallel fetch\nconst [value1, value2] = await Promise.all([getJSON(url1), getJSON(url2)])\n"})}),"\n",(0,t.jsx)(n.h4,{id:"forawait",children:(0,t.jsx)(n.em,{children:"for/await"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"since ES2018"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"for (const promise of promises) {\n  response = await promise;\n  handle(response);\n}\n\n// using for/await\nfor await (const response of promises) {\n  handle(response);\n}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"asynchronous-iterators-and-generators",children:"Asynchronous Iterators and Generators"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'class AsyncQueue {\n  constructor() {\n    this.value = [];\n    this.resolvers = [];\n    this.closed = false;\n  }\n  enqueue(value) {\n    if (this.closed) {\n      throw new Error("AsyncQueue closed");\n    }\n    if (this.resolvers.length > 0) {\n      const resolve = this.resolvers.shift();\n      resolve(value);\n    } else {\n      this.values.push(value);\n    }\n  }\n  dequeue() {\n    if (this.values.length > 0) {\n      const value = this.values.shift();\n      return Promise.resolve(value);\n    } else if (this.closed) {\n      return Promise.resolve(AsyncQueue.EOS);\n    } else {\n      return new Promise((resolve) => {\n        this.resolvers.push(resolve);\n      });\n    }\n  }\n  close() {\n    while (this.resolvers.length > 0) {\n      this.resolvers.shift()(AsyncQueue.EOS);\n    }\n    this.closed = true;\n  }\n  [Symbol.asyncIterator]() {\n    return this;\n  }\n  next() {\n    return this.dequeue().then((value) =>\n      value === AsyncQueue.EOS\n        ? { value: undefined, done: true }\n        : { value: value, done: false }\n    );\n  }\n}\n\nAsyncQueue.EOS = Symbol("end-of-stream");\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const { AsyncQueue } = require("AsyncQueue");\n\nfunction eventStream(elt, type) {\n  const q = new AsyncQueue();\n  elt.addEventListener(type, (e) => q.enqueue(e));\n  return q;\n}\n\nasync function handleKeys() {\n  for await (const event of eventStream(document, "keypress")) {\n    console.log(event.key);\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"chapter-14-metaprogramming",children:"Chapter 14. Metaprogramming"}),"\n",(0,t.jsx)(n.h3,{id:"property-attributes",children:"Property Attributes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"writable"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"whether or not the value can be changed"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"enumerable"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["whether or not it can be enumerated by ",(0,t.jsx)(n.em,{children:"for/in"})," loop and ",(0,t.jsx)(n.em,{children:"Object.keys()"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"configurable"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"whether or not it can be deleted and the property's attributes can changed"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"property-descriptor-object",children:[(0,t.jsx)(n.em,{children:"property descriptor"})," object"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["JavaScript methods for querying and setting the attributes of a property use a ",(0,t.jsx)(n.em,{children:"property descriptor"})," object"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"properties of a property descriptor of a data property"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"value"}),"\n",(0,t.jsx)(n.li,{children:"writable"}),"\n",(0,t.jsx)(n.li,{children:"enumerable"}),"\n",(0,t.jsx)(n.li,{children:"configurable"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"properties of a property descriptor of a accessor property"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"get"}),"\n",(0,t.jsx)(n.li,{children:"set"}),"\n",(0,t.jsx)(n.li,{children:"enumerable"}),"\n",(0,t.jsx)(n.li,{children:"configurable"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const o = Object.getOwnPropertyDescriptor({ x: 1 }, "x");\nconsole.log(o); // { value: 1, writable: true, enumerable: true, configurable: true }\n\nconst random = {\n  get octet() {\n    return Math.floor(Math.random() * 256);\n  },\n};\n\nconsole.log(Object.getOwnPropertyDescriptor(random, "octet"));\n// {\n//   get: [Function: get octet],\n//   set: undefined,\n//   enumerable: true,\n//   configurable: true\n// }\n\nconsole.log(Object.getOwnPropertyDescriptor({}, "x")); // undefined\nconsole.log(Object.getOwnPropertyDescriptor({}, "toString")); // undefined\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'"use strict";\nconst o = {};\n\nObject.defineProperty(o, "x", {\n  value: 1,\n  writable: true,\n  enumerable: false,\n  configurable: true,\n});\n\nconsole.log(o.x); // 1\nconsole.log(Object.keys(o)); // []\n\nObject.defineProperty(o, "x", { writable: false });\ntry {\n  o.x = 2;\n} catch (err) {\n  console.log(err);\n  // TypeError: Cannot assign to read only property \'x\' of object \'#<Object>\'\n}\nconsole.log(o.x); // 1\n\nObject.defineProperty(o, "x", { value: 2 });\nconsole.log(o.x); // 2\n\n// change x from a data property to accessor property\nObject.defineProperty(o, "x", {\n  get: function () {\n    return 0;\n  },\n});\nconsole.log(Object.getOwnPropertyDescriptor(o, "x"));\n// {\n//   get: [Function: get],\n//   set: undefined,\n//   enumerable: false,\n//   configurable: true\n// }\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const p = Object.defineProperties(\n  {},\n  {\n    x: { value: 1, writable: true, enumerable: true, configurable: true },\n    y: { value: 1, writable: true, enumerable: true, configurable: true },\n    r: {\n      get() {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n      },\n      enumerable: true,\n      configurable: true,\n    },\n  }\n);\nconsole.log(p.r); // 1.4142135623730951\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'Object.defineProperty(Object, "assignDescriptors", {\n  writable: true,\n  enumerable: false,\n  configurable: true,\n  value: function (target, ...sources) {\n    for (const source of sources) {\n      for (const name of Object.getOwnPropertyNames(source)) {\n        const desc = Object.getOwnPropertyDescriptor(source, name);\n        Object.defineProperty(target, name, desc);\n      }\n      for (const symbol of Object.getOwnPropertySymbols(source)) {\n        const desc = Object.getOwnPropertyDescriptor(source, symbol);\n        Object.defineProperty(target, symbol, desc);\n      }\n    }\n    return target;\n  },\n});\n\nconst o = {\n  c: 1,\n  get count() {\n    return this.c++;\n  },\n};\nconst p = Object.assign({}, o);\nconst q = Object.assignDescriptors({}, o);\n\nconsole.log(p.count); // 1\nconsole.log(p.count); // 1; because of just a data property\n\nconsole.log(q.count); // 2\nconsole.log(q.count); // 3; because copied as getter\n'})}),"\n",(0,t.jsx)(n.h3,{id:"object-extensibility",children:"Object Extensibility"}),"\n",(0,t.jsx)(n.p,{children:"whether new properties can be added to an object or not"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"Object.isExtensible()"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["return ",(0,t.jsx)(n.code,{children:"true"})," if an object is extensible"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"Object.preventExtensions()"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"makes an object non-extensible"}),"\n",(0,t.jsx)(n.li,{children:"a non-extensible object cannot be extensible"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"objectseal",children:(0,t.jsx)(n.em,{children:"Object.seal()"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["makes the object non-extensible and all the properties noncofiguable","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"new properties cannot be added to the object"}),"\n",(0,t.jsx)(n.li,{children:"existing properties cannot be deleted or configured"}),"\n",(0,t.jsx)(n.li,{children:"existing writable properties can still be set"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"objectfreeze",children:(0,t.jsx)(n.em,{children:"Object.freeze()"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"makes the object non-extensible and all the properties nonconfigurable and read-only"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"symbols-1",children:"Symbols"}),"\n",(0,t.jsx)(n.h4,{id:"symboltostringtag",children:(0,t.jsx)(n.em,{children:"Symbol.toStringTag"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'function classof(o) {\n  return Object.prototype.toString.call(o).slice(8, -1);\n}\n\nconsole.log(classof(null)); // Null\nconsole.log(classof(undefined)); // Undefined\nconsole.log(classof(1)); // Number\nconsole.log(classof(10n ** 100n)); // BigInt\nconsole.log(classof("")); // String\nconsole.log(classof(false)); // Boolean\nconsole.log(classof(Symbol())); // Symbol\nconsole.log(classof({})); // Object\nconsole.log(classof([])); // Array\nconsole.log(classof(/./)); // RegExp\nconsole.log(classof(() => {})); // Function\nconsole.log(classof(new Map())); // Map\nconsole.log(classof(new Set())); // Set\nconsole.log(classof(new Date())); // Date\n\nclass Range {\n  constructor(from, to) {\n    this.from = from;\n    this.to = to;\n  }\n  get [Symbol.toStringTag]() {\n    return "Range";\n  }\n}\nconst r = new Range(1, 10);\nconsole.log(classof(r)); // Range\n'})}),"\n",(0,t.jsx)(n.h3,{id:"pattern-matching-symbols",children:"Pattern-Matching Symbols"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'class Glob {\n  constructor(glob) {\n    this.glob = glob;\n    const regexpText = glob.replace("?", "([^/])").replace("*", "([^/]*)");\n    this.regexp = new RegExp(`^${regexpText}`, "u");\n  }\n  toString() {\n    return this.glob;\n  }\n  [Symbol.search](s) {\n    return s.search(this.regexp);\n  }\n  [Symbol.match](s) {\n    return s.match(this.regexp);\n  }\n  [Symbol.replace](s, replacement) {\n    return s.replace(this.regexp, replacement);\n  }\n}\n\nmodule.exports = { Glob };\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const { Glob } = require("./Glob");\n\nconst pattern = new Glob("docs/*.txt");\n\nconsole.log("docs/sample.txt".search(pattern)); // 0\nconsole.log("docs/sample.htlm".search(pattern)); // -1\n\nconst m = "docs/sample.txt".match(pattern);\nconsole.log(m[0]); // docs/sample.txt\nconsole.log(m[1]); // sample\nconsole.log(m.index); // 0\n\nconsole.log("docs/sample.txt".replace(pattern, "web/$1.html")); // web/sample.html\n'})}),"\n",(0,t.jsx)(n.h3,{id:"symboltoprimitive",children:(0,t.jsx)(n.em,{children:"Symbol.toPrimitive"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"define how to convert an object to primitive value"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'class Vector {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n  [Symbol.toPrimitive](arg) {\n    if (arg == "string") {\n      return `(${this.x}, ${this.y})`;\n    } else if (arg == "number") {\n      return this.x * this.x + this.y * this.y;\n    } else {\n      return this.x * this.x + this.y * this.y;\n    }\n  }\n}\n\nconst v = new Vector(3, 4);\nconsole.log(`v=${v}`); // v=(3, 4)\nconsole.log(v + v); // 50\nconsole.log(v + 100); // 125\nconsole.log(v + "100"); // 25100\n'})}),"\n",(0,t.jsx)(n.h3,{id:"proxy-class",children:"Proxy Class"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"new Proxy(target, handler)\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'function readOnlyProxy(o) {\n  function readonly() {\n    throw new TypeError("Readonly");\n  }\n  return new Proxy(o, {\n    set: readonly,\n    defineProperty: readonly,\n    deleteProperty: readonly,\n    setPrototypeOf: readonly,\n  });\n}\n\nconst o = { x: 1, y: 2 };\nconst p = readOnlyProxy(o);\nconsole.log(p.x); // 1\ntry {\n  p.x = 2;\n} catch (err) {\n  console.log(err); // TypeError: Readonly\n}\ntry {\n  delete p.y;\n} catch (err) {\n  console.log(err); // TypeError: Readonly\n}\ntry {\n  p.z = 3;\n} catch (err) {\n  console.log(err); // TypeError: Readonly\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"chapter-15-javascript-in-web-browsers",children:"Chapter 15. JavaScript in Web Browsers"}),"\n",(0,t.jsx)(n.h3,{id:"namespace",children:"Namespace"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"with non-module scripts, the contents such as variables, functions, classes defined in top-level code are shared with all other scripts in the same document."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"web-worker",children:"Web Worker"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"a controlled form of concurrency"}),"\n",(0,t.jsx)(n.li,{children:"background thread for performing computationally intensive tasks"}),"\n",(0,t.jsx)(n.li,{children:"the thread does not share any state with the main thread or with other workers"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"the-same-origin-policy",children:"The same-origin policy"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"origin = protocol + host + port"})," of a loaded ",(0,t.jsx)(n.strong,{children:"document"}),", not a script"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"custom-event",children:"Custom Event"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'document.dispatchEvent(new CustomEvent(\n  "busy",   // custom event type\n  { detail: true }  // custom properties\n));\n\nfetch(url)\n  .then(handleNetworkResponse)\n  .catch(handleNetworkError)\n  .finally(() => {\n    document.dispatchEvent(new CustomEvent("bosy", { detail: false }));\n  })\n\ndocument.addEventListener("busy", (e) => {\n  if (e.detail) {\n    showSpinner();\n  } else {\n    hideSpinner();\n  }\n});\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"the-class-attribute",children:["The ",(0,t.jsx)(n.em,{children:"class"})," attribute"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.em,{children:"className"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.em,{children:"classList"})}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const spinner = document.querySelector("#spinner");\nspinner.classList.remove("hidden");\nspinner.classList.add("animated");\n'})}),"\n",(0,t.jsx)(n.h3,{id:"dataset-attributes",children:"Dataset attributes"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<h2 id="title" data-section-number="16.1">Attributes</h2>\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const number = document.querySelector("#title").dataset.sectionNumber;  // 16.1\n'})}),"\n",(0,t.jsx)(n.h3,{id:"coordinate-systems",children:"Coordinate Systems"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"document coordinates"}),"\n",(0,t.jsxs)(n.li,{children:["viewport coordinates (window coordinates)","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"viewport"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"the portion of the browser that actually displays document content"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"preferred to document coordinates"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"location-object",children:[(0,t.jsx)(n.em,{children:"Location"})," Object"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const url = new URL(window.location);\n\n// just assign a string to load new page\nwindow.location = "http://www.oreilly.com";\n\n// replace a current page with a passed URL in browser history\ndocument.location.replace("staticpage.html");\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"fetch-api",children:[(0,t.jsx)(n.em,{children:"fetch"})," API"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"Headers"})," object"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"headers"})," property of Response object"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"has()"})," and ",(0,t.jsx)(n.em,{children:"get()"})," are case-",(0,t.jsx)(n.strong,{children:"in"}),"sensitive"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["rejects the ",(0,t.jsx)(n.em,{children:"Promise"})," if it cannot contact the web server."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"the user's computer is offline"}),"\n",(0,t.jsx)(n.li,{children:"the server is unresponsive"}),"\n",(0,t.jsx)(n.li,{children:"the URL specifies a hostname that does not exist"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["recommended to put ",(0,t.jsx)(n.em,{children:"fetch()"})," in try-catch clause"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"try {\n  const res = await fetch();\n} catch (err) {\n\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"a streaming API example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'fetch("big.json")\n  .then(response => streamBody(response, updateProgress))\n  .then(bodyText => JSON.parse(bodyText))\n  .then(handleBigJSONObject);\n\nasync function streamBody(response, reportProgress, processChunk) {\n  const expectedBytes = parseInt(response.headers.get("Content-Length"));\n  let bytesRead = 0;\n  const reader = response.body.getReader();\n  const decoder = new TextDecoder("utf-8");\n  let body = "";\n\n  while (true) {\n    const {done, value} = await reader.read();\n\n    if (value) {\n      if (processChunk) {\n        const processed = processChunk(value);\n        if (processed) {\n          body += processed;\n        }\n      } else {\n        body += decoder.decode(value, {stream: true});\n      }\n\n      if (reportProgress) {\n        bytesRead += value.length;\n        reportProgress(bytesRead, bytesRead / expectedBytes);\n      }\n    }\n    if (done) {\n      break;\n    }\n  }\n  return body;\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"aborting-a-request",children:"Aborting a request"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"function fetchWithTimeout(url, options={}) {\n  if (options.timeout) {\n    const controller = new AbortController();\n    options.signal = controller.signal;\n    setTimeout(() => { controller.abort(); }, options.timeout);\n  }\n  return fetch(url, options);\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"localstorage",children:(0,t.jsx)(n.em,{children:"LocalStorage"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"window.localStorage"})}),"\n",(0,t.jsx)(n.li,{children:"the property values must be string"}),"\n",(0,t.jsxs)(n.li,{children:["the properties persist","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["if you set a property of the ",(0,t.jsx)(n.em,{children:"localStorage"})," object and then the user reloads the page, the value is still available"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["the lifetime is permanent","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"it does not expire until the user deletes it"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["scoped to the document origin (= protocol + hostname + port) and browser","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["all documents with the same origin share the same ",(0,t.jsx)(n.em,{children:"localStorage"})," data"]}),"\n",(0,t.jsxs)(n.li,{children:["we cannot access ",(0,t.jsx)(n.em,{children:"localStorage"})," data of different browsers even if the document is from same origin"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const name = localStorage.username;\nif (!name) {\n  name = prompt("What is your name?");\n  localStorage.username = name;\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"sessionstorage",children:(0,t.jsx)(n.em,{children:"sessionStorage"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"window.sessionStorage"})}),"\n",(0,t.jsxs)(n.li,{children:["the lifetime is the same as the top-level window or browser tab","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["but if a browser reopens tabs and restores the sessions, ",(0,t.jsx)(n.em,{children:"sessionStorage"})," data is also restored"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["scoped to the document origin","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["we cannot access ",(0,t.jsx)(n.em,{children:"sessionStorage"})," data of different tabs even if the document is from same origin"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"cookies",children:[(0,t.jsx)(n.em,{children:"Cookie"}),"s"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["intended for storage of small amouts of data by server-side scripts","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"4 KB size limit"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'function getCookies() {\n  const cookies = new Map();\n  const all = document.cookie;\n  const list = all.split("; ");\n  for (const cookie of list) {\n    if (!cookie.includes("=")) continue;\n    const p = cookie.indexOf("=");\n    const name = cookie.substring(0, p);\n    const value = cookie.substring(p + 1);\n    value = decodeURIComponent(value);\n    cookies.set(name, value);\n  }\n  return cookies;\n}\n\nfunction setCookie(name, value, daysToLive=null) {\n  // cookie value cannot include `;`, `,`, ` ` so we need to encode it\n  const cookie = `${name}=${encodeURIComponent(value)}`;\n  if (daysToLive !== null) {\n    cookie += `; max-age=${daysToLive * 60 * 60 * 24}`;\n  }\n  document.cookie = cookie;\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"indexeddb",children:(0,t.jsx)(n.em,{children:"IndexedDB"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["scoped to an origin of a document","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["documents of the same origin can share an ",(0,t.jsx)(n.em,{children:"IndexedDB"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"chapter-16-server-side-javascript-with-node",children:"Chapter 16. Server-Side JavaScript with Node"}),"\n",(0,t.jsx)(n.h3,{id:"module-system",children:"Module System"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"ES6 module"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"import"})," and ",(0,t.jsx)(n.code,{children:"export"})]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:".mjs"})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"type: module"})," in package.json"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"CommonJS module"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"require"})," and ",(0,t.jsx)(n.code,{children:"exports"})]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:".cjs"})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"type: commonjs"})," in package.json"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"How Node recognizes the module type"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"first, Node search for a nearest package.json"}),"\n",(0,t.jsxs)(n.li,{children:["if found, treats programs as a module of ",(0,t.jsx)(n.em,{children:"type"})," in package.json"]}),"\n",(0,t.jsx)(n.li,{children:"if not found, treats programs as CommonJS module"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"asynchrony",children:"Asynchrony"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Node was designed and optimized I/O intensive programs such as network servers"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"easily implement highly concurrent servers that can handle many requests at the same time"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"But Node uses the single-threaded JavaScript model like web browsers"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"event-based concurrency"}),"\n",(0,t.jsx)(n.li,{children:"Node maps the OS event to the JavaScript callback you registered and then invokes that function"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Node makes its API asynchronous and nonblocking by default for concurrency"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Node APIs are callback-based (",(0,t.jsx)(n.em,{children:"error-first callbacks"}),")"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const fs = require("fs");\n\nfunction readConfigFile(path, callback) {\n  fs.readFile(path, "utf8", (err, text) => {\n    if (err) {\n      console.error(err);\n      callback(null);\n      return;\n    }\n    const data = null;\n    try {\n      data = JSON.parse(text);\n    } catch (err) {\n      console.error(err);\n    }\n    callback(data);\n  });\n}\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const util = require("util");\nconst fs = require("fs");\nconst pfs = {\n  readFile: util.promisify(fs.readFile),\n};\n\n// handmade promise versions\nfunction promiseRaadConfigFile(path) {\n  return pfs.readFile(path, "utf-8").then((text) => {\n    return JSON.parse(text);\n  });\n}\n\nasync function asyncReadConfigFile(path) {\n  const text = await pfs.readFile(path, "utf-8");\n  return JSON.parse(text);\n}\n\n// using predefined\nfunction promiseReadConfigFile2(path) {\n  return fs.promises.readFile(path, "utf-8").then((text) => {\n    return JSON.parse(text);\n  });\n}\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const fs = require("fs");\n\nfunction readConfigFileSync(path) {\n  const text = fs.readFileSync(path, "utf-8");\n  return JSON.parse(text);\n}\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const fs = require("fs");\nconst path = require("path");\n\nfs.writeFileSync(\n  path.resolve(__dirname, "settings.json"),\n  JSON.stringify(settings)\n);\n'})}),"\n",(0,t.jsx)(n.h4,{id:"lowest-api-to-read-and-write-a-file",children:"Lowest API to read and write a file"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"center"},children:"File Mode String"}),(0,t.jsx)(n.th,{style:{textAlign:"center"},children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"center"},children:(0,t.jsx)(n.code,{children:"r"})}),(0,t.jsx)(n.td,{style:{textAlign:"center"},children:"read; default"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"center"},children:(0,t.jsx)(n.code,{children:"w"})}),(0,t.jsx)(n.td,{style:{textAlign:"center"},children:"write"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"center"},children:(0,t.jsx)(n.code,{children:"w+"})}),(0,t.jsx)(n.td,{style:{textAlign:"center"},children:"read/write"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"center"},children:(0,t.jsx)(n.code,{children:"wx"})}),(0,t.jsx)(n.td,{style:{textAlign:"center"},children:"create a new file to write; fails if the named file already exists"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"center"},children:(0,t.jsx)(n.code,{children:"wx+"})}),(0,t.jsx)(n.td,{style:{textAlign:"center"},children:"create a new file to read/write; fails if the named file already exists"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"center"},children:(0,t.jsx)(n.code,{children:"a"})}),(0,t.jsx)(n.td,{style:{textAlign:"center"},children:"append"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"center"},children:(0,t.jsx)(n.code,{children:"a+"})}),(0,t.jsx)(n.td,{style:{textAlign:"center"},children:"read/append"})]})]})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const fs = require("fs");\n\nfs.open("tmp.txt", "w", (err, fd) => { // do something })\nfs.writeFileSync("tmp.txt", "hello", { flag: "a" });\nfs.createWriteStream("tmp.txt", { flags: "wx" });\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const fs = require("fs");\n\nfs.open("data", (err, fd) => {\n  if (err) {\n    return;\n  }\n  try {\n    fs.read(\n      fd, // file descriptor\n      Buffer.alloc(400),\n      0, // offset (in the allocated buffer where to start fill bytes)\n      400, // longth (to read bytes)\n      20, // position (in the file where to start read bytes)\n      (err, n, b) => {\n        // n is the number of bytes actually read.\n        // b is the buffer that they bytes were read into.\n      }\n    );\n  } finally {\n    fs.close(fd);\n  }\n});\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const fs = require("fs");\n\nfunction readData(filename) {\n  const fd = fs.openSync(filename);\n  try {\n    const header = Buffer.alloc(12);\n    fs.readSync(fd, header, 0, 12, 0);\n\n    const magic = header.readInt32LE(0);\n    if (magic !== 0xdadafeed) {\n      throw new Error("File is of wrong type");\n    }\n\n    const offset = header.readInt32LE(4);\n    const length = header.readInt32LE(8);\n\n    const data = Buffer.alloc(length);\n    fs.readSync(fd, data, 0, length, offset);\n    return data;\n  } finally {\n    fs.closeSync(fd);\n  }\n}\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"events-and-eventemitter",children:[(0,t.jsx)(n.em,{children:"Event"}),"s and ",(0,t.jsx)(n.em,{children:"EventEmitter"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const EventEmitter = require("events");\nconst net = require("net");\n\nconst server = new net.Server(); // Server class is a subclass of EventEmitter\nserver.on("connection", (socket) => {\n  socket.end("Hello World", "utf-8");\n});\nserver.on("error", (err) => {\n  console.error(err);\n});\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"streams",children:[(0,t.jsx)(n.em,{children:"Stream"}),"s"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Use when a data that you want to read/write cannot be in memory at once"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const fs = require("fs");\n\nconst output = fs.createWriteStream("numbers.txt");\nfor (let i = 0; i < 100; i++) {\n  output.write(`${i}\\n`);\n}\noutput.end();\n'})}),"\n",(0,t.jsxs)(n.h4,{id:"pipes",children:[(0,t.jsx)(n.em,{children:"Pipe"}),"s"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["handles ",(0,t.jsx)(n.em,{children:"backpressure"})," automatically","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"keeps a pace to push a chunk to and pop a chunk from a buffer"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const fs = require("fs");\n\nfunction pipeFileToSocket(filename, socket) {\n  fs.createReadStream(filename).pipe(socket);\n}\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'function pipe(readable, writable, callback) {\n  function handleError(err) {\n    readable.close();\n    writable.close();\n    callback(err);\n  }\n\n  readable\n    .on("error", handleError)\n    .pipe(writable)\n    .on("error", handleError)\n    .on("finish", callback);\n}\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const fs = require("fs");\nconst zlib = require("zlib");\n\nfunction gzip(filename, callback) {\n  const source = fs.createReadStream(filename);\n  const destination = fs.createWriteStream(filename + ".gz");\n  const gzipper = zlib.createGzip();\n\n  source\n    .on("error", callback)\n    .pipe(gzipper)\n    .pipe(destination)\n    .on("error", callback)\n    .on("finish", callback);\n}\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const stream = require("stream");\n\nclass GrepStream extends stream.Transform {\n  constructor(pattern) {\n    super({ decodeStrings: false });\n    this.pattern = pattern;\n    this.incompleteLine = "";\n  }\n\n  _transform(chunk, encoding, callback) {\n    if (typeof chunk !== "string") {\n      callback(new Error("Expected a string but got a buffer"));\n      return;\n    }\n\n    const lines = (this.incompleteLine + chunk).split("\\n");\n\n    this.incompleteLine = lines.pop();\n\n    let output = lines.filter((line) => this.pattern.test(line)).join("\\n");\n\n    if (output) {\n      output += "\\n";\n    }\n\n    callback(null, output);\n  }\n\n  // called right before the stream is closed\n  _flush(callback) {\n    if (this.pattern.test(this.incompleteLine)) {\n      callback(null, this.incompleteLine + "\\n");\n    }\n  }\n}\n\nconst pattern = new RegExp(process.argv[2]);\nprocess.stdin\n  .setEncoding("utf8")\n  .pipe(new GrepStream(pattern))\n  .pipe(process.stdout)\n  .on("error", () => process.exit());\n'})}),"\n",(0,t.jsx)(n.h4,{id:"forawait-1",children:(0,t.jsx)(n.em,{children:"for/await"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'// this example does not handle backpressure\nasync function grep(source, destination, pattern, encoding = "utf8") {\n  source.setEncoding(encoding);\n  destination.on("error", (err) => process.exit());\n\n  let incompleteLine = "";\n  for await (const chunk of source) {\n    const lines = (incompleteLine + chunk).split("\\n");\n    incompleteLine = lines.pop();\n    for (const line of lines) {\n      if (pattern.test(line)) {\n        destination.write(line + "\\n", encoding);\n      }\n    }\n  }\n  if (pattern.test(incompleteLine)) {\n    destination.write(incompleteLine + "\\n", encoding);\n  }\n}\n\nconst pattern = new RegExp(process.argv[2]);\ngrep(process.stdin, process.stdout, pattern).catch((err) => {\n  console.log(err);\n  process.exit();\n});\n'})}),"\n",(0,t.jsx)(n.h3,{id:"path",children:(0,t.jsx)(n.em,{children:"path"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const os = require("os");\n\nprocess.cwd(); // absolute path of the current directory\n__filename; // absolute path of the file\n__dirname; // absolute path of the directory containing the file\nos.homedir(); // absolute path of user\'s home directory\n\nconst path = require("path");\n\n"parent_dir" + path.sep + "child_dir"; // parent_dir/child_dir\n\nconst p = "src/pkg/test.js";\npath.basename(p); // test.js\npath.extname(p); // .js\npath.dirname(p); // src/pkg\npath.basename(path.dirname(p)); // pkg\npath.dirname(path.dirname(p)); // src\n\npath.normalize("a/b/c/../c/"); // a/b/c/\npath.normalize("a/./b"); // a/b\npath.normalize("//a//b//"); // /a/b/\n\npath.join("src", "pkg", "t.js"); // src/pkg/t.js\n\n// path.resolve() is just a string manipulation method.\n// It does not actually resolve the path though a file system.\n// Use fs.realpath() and fs.realpathSync() to resolve symbolic links\npath.resolve(); // equivalent to process.cwd()\npath.resolve("t.js"); // path.join(process.cwd(), t.js)\npath.resolve("/tmp", "t.js"); // /tmp/t.js\npath.resolve("/a", "/b", "t.js"); // /b/t.js\n'})}),"\n",(0,t.jsx)(n.h3,{id:"file-utils",children:"File Utils"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const fs = require("fs");\n\nfs.copyFileSync("src.txt", "dst.txt");\nfs.copyFile(\n  "src.txt",\n  "dst.txt",\n  fs.constants.COPYFILE_EXCL, // copy a file only when a file with the same name does not exist\n  (err) => {\n    // handle error\n  }\n);\n\nfs.promises\n  .copyFile(\n    "src.txt",\n    "dst.txt",\n    fs.constants.COPYFILE_EXCL | fs.constants.COPYFILE_FICLONE\n  )\n  .then(() => {\n    console.log("copy complete");\n  })\n  .catch((err) => {\n    console.error("copy failed", err);\n  });\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const fs = require("fs");\n\nconst stats = fs.statSync("./argv.js");\nstats.isFile(); // true\nstats.isDirectory(); // false\nstats.size; // 259\nstats.atime; // 2021-11-18T13:13:22.483Z ; last access\nstats.mtime; // 2021-11-18T10:24:51.191Z ; last modified\nstats.uid; // 0\nstats.gid; // 0\nstats.mode.toString(8); // 100644 ; file permission as an octal\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const os = require("os");\nconst fs = require("fs");\nconst path = require("path");\n\nlet tempDirPath;\ntry {\n  tempDirPath = fs.mkdtempSync(path.join(os.tmpdir(), "d-"));\n  console.log(tempDirPath); // /tmp/d-til3mB\n  // do something\n} finally {\n  fs.rmdirSync(tempDirPath);\n}\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const fs = require(\"fs\");\n\nconst dirPath = \"/workspaces/jdg\";\n\nconst filePaths = fs.readdirSync(dirPath);\nconsole.log(filePaths);\n// [\n//   '.devcontainer',\n//   '.git',\n//   '.gitignore',\n//   'README.md',\n//   'ch03_Types-Values-and-Variables',\n//   'ch04_Expressions-and-Operators',\n//   'ch06_Objects',\n//   'ch07_Arrays',\n//   'ch08_Functions',\n//   'ch09_Classes',\n//   'ch10_Modules',\n//   'ch11_The_JavaScript_Standard_Library',\n//   'ch12_Iterators-and-Generators',\n//   'ch13_Asynchronous-JavaScript',\n//   'ch14_Metaprogramming',\n//   'ch16_Server-Side-JavaScript-with-Node',\n//   'node_modules'\n// ]\n\nfs.promises\n  .readdir(dirPath, { withFileTypes: true })\n  .then((entries) => {\n    entries\n      .filter((entry) => entry.isDirectory())\n      .map((entry) => entry.name)\n      .forEach((name) => console.log(name));\n  })\n  .catch(console.error);\n\n// .devcontainer\n// .git\n// ch03_Types-Values-and-Variables\n// ch04_Expressions-and-Operators\n// ch06_Objects\n// ch07_Arrays\n// ch08_Functions\n// ch09_Classes\n// ch10_Modules\n// ch11_The_JavaScript_Standard_Library\n// ch12_Iterators-and-Generators\n// ch13_Asynchronous-JavaScript\n// ch14_Metaprogramming\n// ch16_Server-Side-JavaScript-with-Node\n// node_modules\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const fs = require("fs");\nconst path = require("path");\n\nasync function listDirectory(dirpath) {\n  const dir = await fs.promises.opendir(dirpath);\n  for await (const entry of dir) {\n    let name = entry.name;\n    if (entry.isDirectory()) {\n      name += "/";\n    }\n    const stats = await fs.promises.stat(path.join(dirpath, name));\n    const size = stats.size;\n    console.log(String(size).padStart(10), name);\n  }\n}\n\nlistDirectory("/workspaces/jdg");\n// 4096 node_modules/\n// 4096 ch03_Types-Values-and-Variables/\n// 4096 ch04_Expressions-and-Operators/\n// 4096 ch16_Server-Side-JavaScript-with-Node/\n// 2453 .gitignore\n// 4096 ch12_Iterators-and-Generators/\n//   89 README.md\n// 4096 ch10_Modules/\n// 4096 .devcontainer/\n// 4096 .git/\n// 4096 ch07_Arrays/\n// 4096 ch09_Classes/\n// 4096 ch11_The_JavaScript_Standard_Library/\n// 4096 ch14_Metaprogramming/\n// 4096 ch06_Objects/\n// 4096 ch13_Asynchronous-JavaScript/\n// 4096 ch08_Functions/\n'})}),"\n",(0,t.jsx)(n.h3,{id:"http-clients-and-servers",children:"HTTP Clients and Servers"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const https = require("https");\n\nfunction postJSON(host, endpoint, body, port, username, password) {\n  return new Promise((resolve, reject) => {\n    const bodyText = JSON.stringify(body);\n\n    const requestOptions = {\n      method: "POST",\n      host: host,\n      path: endpoint,\n      headers: {\n        "Content-Type": "application/json",\n        "Content-Length": Buffer.byteLength(bodyText),\n      },\n    };\n    if (port) {\n      requestOptions.port = port;\n    }\n    if (username && password) {\n      requestOptions.auth = `${username}:${password}`;\n    }\n\n    const request = https.request(requestOptions);\n    request.write(bodyText);\n    request.end();\n\n    request.on("error", (e) => reject(e));\n\n    request.on("response", (response) => {\n      if (response.statusCode !== 200) {\n        reject(new Error(`HTTP status ${response.statusCode}`));\n\n        response.resume(); // open memory used this response body\n        return;\n      }\n\n      response.setEncoding("utf-8");\n      let body = "";\n      response.on("data", (chunk) => {\n        body += chunk;\n      });\n      response.on("end", () => {\n        try {\n          resolve(JSON.parse(body));\n        } catch (err) {\n          reject(err);\n        }\n      });\n    });\n  });\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"child-processes",children:"Child Processes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"with blocking"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const child_process = require("child_process");\nconst listing = child_process.execSync("ls -l ./*.js", { encoding: "utf8" });\nconsole.log(listing);\n// -rw-r--r-- 1 root root  259 Nov 18 10:24 ./argv.js\n// -rw-r--r-- 1 root root  693 Nov 18 12:24 ./buffer.js\n// -rw-r--r-- 1 root root  263 Nov 22 01:45 ./child-process.js\n// ...\n// -rw-r--r-- 1 root root  567 Nov 20 06:28 ./sha256-paused-mode.js\n// -rw-r--r-- 1 root root  170 Nov 20 14:08 ./tcp-client.js\n// -rw-r--r-- 1 root root 1469 Nov 20 14:05 ./tcp-server.js\n\nconst listing2 = child_process.execFileSync("ls", ["-l", "./"], {\n  encoding: "utf-8",\n});\nconsole.log(listing2);\n// total 108\n// -rw-r--r-- 1 root root  259 Nov 18 10:24 argv.js\n// -rw-r--r-- 1 root root  693 Nov 18 12:24 buffer.js\n// -rw-r--r-- 1 root root  263 Nov 22 01:45 child-process.js\n// ...\n// -rw-r--r-- 1 root root  567 Nov 20 06:28 sha256-paused-mode.js\n// -rw-r--r-- 1 root root  170 Nov 20 14:08 tcp-client.js\n// -rw-r--r-- 1 root root 1469 Nov 20 14:05 tcp-server.js\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"non-blocking"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const child_process = require("child_process");\nconst util = require("util");\nconst execP = util.promisify(child_process.exec);\n\nfunction parallelExec(commands) {\n  const promises = commands.map((command) =>\n    execP(command, { encoding: "utf8" })\n  );\n\n  return Promise.all(promises).then((outputs) =>\n    outputs.map((out) => out.stdout)\n  );\n}\n\nmodule.exports = parallelExec;\n'})}),"\n",(0,t.jsx)(n.h4,{id:"spawn",children:(0,t.jsx)(n.em,{children:"spawn()"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"a parent process can communicate with a child process through streams to pipe stdin, stdout, stderr of each"}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"fork",children:(0,t.jsx)(n.em,{children:"fork()"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"communication between process is easy"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const child_process = require("child_process");\n\nconst child = child_process.fork(`${__dirname}/child.js`);\n\nchild.send({ x: 4, y: 3 }); // parent -> child\n\nchild.on("message", (message) => {\n  console.log(message.hypotenuse);\n  child.disconnect();\n});\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'// child.js\nprocess.on("message", (message) => {\n  process.send({ hypotenuse: Math.hypot(message.x, message.y) });\n});\n'})}),"\n",(0,t.jsx)(n.h4,{id:"worker-threads",children:(0,t.jsx)(n.em,{children:"Worker Threads"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"thread-base asynchronous"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const threads = require("worker_threads");\n\nif (threads.isMainThread) {\n  module.exports = function reticulateSplines(splines) {\n    return new Promise((resolve, reject) => {\n      const reticulator = new threads.Worker(__filename);\n      reticulator.postMessage(splines);\n      reticulator.on("message", resolve);\n      reticluator.on("error", reject);\n    });\n  };\n} else {\n  threads.parentPort.once("message", (splines) => {\n    for (const spline of splines) {\n      spline.reticulate ? spline.reticulate() : (spline.reticulated = true);\n    }\n    threads.parentPort.postMessage(splines);\n  });\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},7215:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/promises-7e01f879f808399bf7b8b279bb248f79.png"},5248:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var r=s(758);const t={},i=r.createContext(t);function l(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);