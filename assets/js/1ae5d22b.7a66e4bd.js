"use strict";(self.webpackChunke_5_pe_0_n_github_io=self.webpackChunke_5_pe_0_n_github_io||[]).push([[7485],{7734:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"coding/js/tips","title":"Tips","description":"Promise","source":"@site/docs/coding/js/tips.md","sourceDirName":"coding/js","slug":"/coding/js/tips","permalink":"/docs/coding/js/tips","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"techNoteSidebar","previous":{"title":"JavaScript: The Definitive Guide","permalink":"/docs/coding/js/fundamentals"},"next":{"title":"Python","permalink":"/docs/category/python"}}');var s=t(6070),o=t(5248);const i={},c="Tips",l={},d=[{value:"Promise",id:"promise",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"tips",children:"Tips"})}),"\n",(0,s.jsx)(n.h2,{id:"promise",children:"Promise"}),"\n",(0,s.jsxs)(n.p,{children:["Once fulfilled, it returns the value resolved for the first time.\nFor an example below, we call a resolver ",(0,s.jsx)(n.code,{children:"r"})," twice; ",(0,s.jsx)(n.code,{children:"r(1)"})," then ",(0,s.jsx)(n.code,{children:"r(2)"}),".\nEventually awaited Promise ",(0,s.jsx)(n.code,{children:"p"})," in an event handler resolves to ",(0,s.jsx)(n.code,{children:"1"}),", and it always returns ",(0,s.jsx)(n.code,{children:"1"})," whenever the execution reaches the ",(0,s.jsx)(n.code,{children:"p"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'import { EventEmitter } from "node:events";\n\nexport function withResolvers<T>() {\n\tlet resolve: (value: T | PromiseLike<T>) => void;\n\tlet reject: (reason?: unknown) => void;\n\tconst promise = new Promise<T>((res, rej) => {\n\t\tresolve = res;\n\t\treject = rej;\n\t});\n\t// @ts-ignore: ts(2454)\n\treturn { promise, resolve, reject };\n}\n\nconst { promise: p, resolve: r } = withResolvers<number>();\n\nconst eventEmitter = new EventEmitter();\neventEmitter.on("event", async () => {\n\tconsole.log("event");\n\tconst pv = await p;\n\tconsole.log(pv);\n});\n\neventEmitter.emit("event");\n\nr(1);\n\neventEmitter.emit("event");\n\nr(2);\n\neventEmitter.emit("event");\n\n// event\n// event\n// event\n// 1\n// 1\n// 1\n'})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},5248:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>c});var r=t(758);const s={},o=r.createContext(s);function i(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);